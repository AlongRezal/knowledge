Material: 

Angular Material Pagination Datasource:
https://medium.com/angular-in-depth/angular-material-pagination-datasource-73080d3457fe

Angular Material matInput control with thousands separator:
https://medium.com/angular-in-depth/angular-material-matinput-control-with-thousands-separation-ebcbb7b027f4

Creating Beautiful Apps with Angular Material:
https://auth0.com/blog/creating-beautiful-apps-with-angular-material/

The complete guide to Angular Material Themes:
https://medium.com/@tomastrajan/the-complete-guide-to-angular-material-themes-4d165a9d24d1

Angular, NgRx, Angular CLI & Angular Material Starter Project:
https://tomastrajan.github.io/angular-ngrx-material-starter
https://github.com/tomastrajan/angular-ngrx-material-starter

Angular Material Data Table:
https://blog.angular-university.io/angular-material-data-table/

Routing to a route (controller for instance) when a user clicks on a row in a Material Table:
https://stackoverflow.com/a/55793834

Angular Material Starter with Ng-Bootstrap support
https://medium.com/@udbhav1995/angular-material-starter-with-ng-bootstrap-support-46bdc8de27c6

(Example) - Building a news application with Angular (6) and Material Design:
https://www.smashingmagazine.com/2018/10/news-application-with-angular-and-material-design/

Getting Started With Angular Material:
https://material.angular.io/guide/getting-started

Angular Material Table Overview:
https://material.angular.io/components/table/overview


What makes Angular Material Tables Super Cool:
https://medium.com/@fnote/md-tables-angular-material-be2c45947955

The complete guide to Angular Material Themes:
https://medium.com/@tomastrajan/the-complete-guide-to-angular-material-themes-4d165a9d24d1

Angular Material 8 Tutorial: Build Navigation UI with Toolbar and Side Navigation Menu: 
https://www.techiediaries.com/angular-material-navigation-toolbar-sidenav/:

Angular Materil Design Icons:
https://material.io/resources/icons/?style=baseline

Angular Material Icons List with associated tags:
https://www.angularjswiki.com/angular/angular-material-icons-list-mat-icon-list/

Polymer Icons:

Demo page:
https://www.webcomponents.org/element/@polymer/iron-icons/demo/demo/index.html

GitHub:
https://www.webcomponents.org/element/@polymer/iron-icons

Angular 6 Material SideNav Example: 
https://www.devglan.com/angular/material-sidenav-example

Using Angular CDK Portal to create a Modal:
https://medium.com/javascript-in-plain-english/using-angular-cdk-portal-to-create-a-modal-fde843428d83


Angular Material CDK Portal

The portals package provides a flexible system for rendering dynamic content into an application.

https://material.angular.io/cdk/portal/overview

Checking out Angular’s CDK portals
https://itnext.io/checking-out-angulars-cdk-portals-d34bfd8a5647

Other portal approaches are discussed in this article:
https://juristr.com/blog/2018/05/dynamic-UI-with-cdk-portals/

Another article and demo code for using Material CDK Portal:
https://netbasal.com/creating-powerful-components-with-angular-cdk-2cef53d81cea


============================================================================================================================================
============================================================================================================================================
============================================================================================================================================


Components 


Angular Components - The Fundamentals (April 2019):
https://blog.angular-university.io/introduction-to-angular-2-fundamentals-of-components-events-properties-and-actions/

Angular For Beginners Guide - Components vs Directives:
https://blog.angular-university.io/angular-components-and-directives-for-beginners/

Creating Behavioral Components in Angular:
https://netbasal.com/creating-behavioral-components-in-angular-8db6080f0cc4

Angular Components Tips and Tricks:
https://netbasal.com/angular-components-tips-and-tricks-d9e725871d58

Angular Architecture - Smart Components vs Presentational Components:
https://blog.angular-university.io/angular-2-smart-components-vs-presentation-components-whats-the-difference-when-to-use-each-and-why/

Angular Architecture - Container vs Presentational Components Common Design Pitfalls:
https://blog.angular-university.io/angular-component-design-how-to-avoid-custom-event-bubbling-and-extraneous-properties-in-the-local-component-tree/


Angular Components - The Fundamentals:
blog.angular-university.io/introduction-to-angular-2-fundamentals-of-components-events-properties-and-actions/

Ngrx Store - An Architecture Guide:
https://blog.angular-university.io/angular-ngrx-store-and-effects-crash-course/

Angular ngFor - Learn all Features including trackBy, why is it not only for Arrays? (April 2019):
https://blog.angular-university.io/angular-2-ngfor/

3 ways to communicate between Angular components:
https://medium.com/@mirokoczka/3-ways-to-communicate-between-angular-components-a1e3f3304ecb

How to pass a custom template to an Angular component?:
https://blog.angulartraining.com/how-to-pass-a-custom-template-to-an-angular-component-53592d634a47

Here is what you need to know about dynamic components in Angular:
https://medium.com/angular-in-depth/here-is-what-you-need-to-know-about-dynamic-components-in-angular-ac1e96167f9e

Level Up Your Components API Using the Strategy Pattern:
medium.com/angular-in-depth/level-up-your-components-api-using-the-strategy-pattern-61762583a7d8

Angular ViewChild and ViewChildren:
https://medium.com/better-programming/angular-viewchild-and-viewchildren-fde2d252b9ab

Understanding provider scope in Angular:
https://itnext.io/understanding-provider-scope-in-angular-4c2589de5bc

Building Custom Elements / Web Components with Angular 6:
https://medium.com/@tomsu/building-web-components-with-angular-elements-746cd2a38d5b

A Component Dev Kit for Angular:
https://blog.angular.io/a-component-dev-kit-for-angular-9f06e3b4b3b4

Understanding ViewChildren, ContentChildren, and QueryList in Angular:
https://netbasal.com/understanding-viewchildren-contentchildren-and-querylist-in-angular-896b0c689f6e

Accessibility Made Easy with Angular CDK:
https://netbasal.com/accessibility-made-easy-with-angular-cdk-1caaf3d98de2

Container Components with Angular:
https://medium.com/angular-in-depth/container-components-with-angular-11e4200f8df

Improving Angular *ngFor Performance Through trackBy:
https://medium.com/better-programming/improving-angular-ngfor-performance-through-trackby-ae4cf943b878

Learn how to Drag and Drop items in Angular 7:
https://medium.com/codetobe/learn-how-to-drag-drop-items-in-angular-7-20395c262ab0

Angular: Effective Component Patterns:
https://itnext.io/angular-effective-component-patterns-f5f7f08e2072

Create Advanced Components in Angular:
https://netbasal.com/create-advanced-components-in-angular-e0655df5dde6

Angular Optimization. Memoized pipe functions in templates:
https://blog.usejournal.com/angular-optimization-memoized-pipe-functions-in-templates-75f62e16df5a

Understanding Content Projection in Angular:
https://medium.com/better-programming/understanding-content-projection-in-angular-81c9a40d63dc

Dynamic imports solve all the problems, right?
https://blog.mgechev.com/2019/05/11/dynamic-imports-javascript/

Typescript Typings - The Complete Guide To Type Definitions: @types, Compiler Opt-In Types: When To Use Each and Why?:
https://blog.angular-university.io/typescript-2-type-system-how-do-type-definitions-work-in-npm-when-to-use-types-and-why-what-are-compiler-opt-in-types/

Using the Angular Async Pipe properly:
https://malcoded.com/posts/angular-async-pipe/

Angular Effective Component Patterns
https://itnext.io/angular-effective-component-patterns-f5f7f08e2072

Retrieve an image as a byte array from a REST controller and display in Angular:
https://stackblitz.com/edit/display-image-from-api

Another image example (Angular 6+):
https://stackblitz.com/edit/angular-1yr75s

Display an image returned from REST call as BLOB as JSON: 
https://github.com/ksurendra/angular-examples/tree/master/angular-post-blob-get-thumbnail

Components vs Presentational Components:
https://blog.angular-university.io/angular-2-smart-components-vs-presentation-components-whats-the-difference-when-to-use-each-and-why/

Using Angular @ViewChild to implement multiple visualizations of data sets
https://levelup.gitconnected.com/using-angular-viewchild-to-implement-multiple-visualizations-of-data-sets-b626689938f7

How to create a reusable Modal Dialog component in Angular 8 
https://levelup.gitconnected.com/how-to-create-a-reusable-modal-dialog-component-in-angular-8-241cc738d260

Share Component Data With Other Components in Angular 9: 
https://medium.com/better-programming/angular-7-share-component-data-with-other-components-1b91d6f0b93f

Angular Components:
https://howtodoinjava.com/angular/angular-component/

Angular Interpolation:
https://howtodoinjava.com/angular/angular-interpolation/

How to avoid Angular injectable instances duplication:
https://medium.com/angular-in-depth/how-to-avoid-angular-injectable-instances-duplication-213807c6d213

What you always wanted to know about Angular Dependency Injection tree:
https://medium.com/angular-in-depth/angular-dependency-injection-and-tree-shakeable-tokens-4588a8f70d5d

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Debugging and error handling: 

A Guide To Debugging Angular Applications:
https://medium.com/@vamsivempati/a-guide-to-debugging-angular-applications-5a36bd88b4cf

Everything you need to know about debugging Angular applications
https://medium.com/angular-in-depth/everything-you-need-to-know-about-debugging-angular-applications-d308ed8a51b4

Global Error Handling with Angular2+:
https://medium.com/@amcdnl/global-error-handling-with-angular2-6b992bdfb59c

Expecting the Unexpected — Best practices for Error handling in Angular:
https://medium.com/angular-in-depth/expecting-the-unexpected-best-practices-for-error-handling-in-angular-21c3662ef9e4

How To Debug RxJs - A Simple Way For Debugging Rxjs Observables:
https://blog.angular-university.io/debug-rxjs/

RxJs Error Handling: Complete Practical Guide:
https://blog.angular-university.io/rxjs-error-handling/

Angular Debugging "Expression has changed after it was checked": Simple Explanation (and Fix):
https://blog.angular-university.io/angular-debugging/

Error Handling & Angular:
medium.com/@aleixsuau/error-handling-angular-859d529fa53a

Angular 2+ exception handling made simple with logging:
loggly.com/blog/angular-exception-logging-made-simple/

Angular applications -error handling and elegant recovery:
itnext.io/how-to-handle-your-run-time-errors-in-your-angular-application-8d72fefbf8a4

Retry an RxJs observable sequence on error based on custom criteria: 
https://www.learnrxjs.io/learn-rxjs/operators/error_handling/retrywhen

How to send error notifications through Slack from Angular:
https://medium.com/dailyjs/how-to-send-errors-into-slack-dc552e30506f

Introduction to error handling in Angular 7 - Part1 - Angular Errorhandler: 
https://pusher.com/tutorials/error-handling-angular-part-1

Introduction to error handling in Angular 7 - Part2 - Http error handling:
https://pusher.com/tutorials/error-handling-angular-part-2
Code: https://github.com/viclotana/ng_HTTP

Introduction to error handling in Angular 7 - Part3 - Sentry: 
https://pusher.com/tutorials/error-handling-angular-part-3

Sentry:
https://docs.sentry.io/platforms/javascript/angular/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Decorators: 

Exploring the Various Decorators in Angular:
https://netbasal.com/exploring-the-various-decorators-in-angular-b208875b207c

@Self or @Optional @Host? The visual guide to Angular DI decorators:
https://medium.com/frontend-coach/self-or-optional-host-the-visual-guide-to-angular-di-decorators-73fbbb5c8658

Getting to Know the @Attribute Decorator in Angular:
https://netbasal.com/getting-to-know-the-attribute-decorator-in-angular-4f7c9fb61243

Implementing custom component decorator in Angular:
https://medium.com/angular-in-depth/implementing-custom-component-decorator-in-angular-4d037d5a3f0d

Angular @ViewChild: In-Depth Explanation (All Features Covered):
https://blog.angular-university.io/angular-viewchild/


============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Directives: 

Angular Directive Selectors Can Do More Than You Think!
https://netbasal.com/angular-directive-selectors-can-do-more-than-you-think-7aefa4e6f30

The Low Down on Attribute and Structural Directives in Angular:
https://medium.com/better-programming/the-low-down-on-attribute-and-structural-directives-in-angular-d6130eacaf4e?

Having fun with Structural Directives in Angular:
https://medium.com/angular-in-depth/having-fun-with-structural-directives-in-angular-69b4d229ad93

The Power of Structural Directives in Angular
https://netbasal.com/the-power-of-structural-directives-in-angular-bfe4d8c44fb1

Anatomy of Angular Attribute @Directive selector:
https://medium.com/swlh/anatomy-of-angular-attribute-directive-selector-a1d83a73242

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================vvvvvvvvvv

Events: 

Difference between Constructor and ngOnInit in Angular.
https://medium.com/javascript-in-plain-english/difference-between-constructor-and-ngoninit-in-angular-537ecfa6ce1e

Angular Change Detection - How Does It Really Work?
https://blog.angular-university.io/how-does-angular-2-change-detection-really-work/

Event Binding Mechanism in Angular:
https://blog.bitsrc.io/event-binding-mechanism-in-angular-b38f0e46d2ed

Event Emitters in Angular:
https://netbasal.com/event-emitters-in-angular-13e84ee8d28c

Reduce Change Detection Cycles with Event Coalescing in Angular:
https://netbasal.com/reduce-change-detection-cycles-with-event-coalescing-in-angular-c4037199859f

Everything you need to know about change detection in Angular:
https://medium.com/angular-in-depth/everything-you-need-to-know-about-change-detection-in-angular-8006c51d206f

Writing custom virtual scroll strategy
https://medium.com/angular-in-depth/writing-custom-virtual-scroll-strategy-e6b1b2d2e1ac

Do you still think that NgZone (zone.js) is required for change detection in Angular?:
https://medium.com/angular-in-depth/do-you-still-think-that-ngzone-zone-js-is-required-for-change-detection-in-angular-16f7a575afef

These 5 articles will make you an Angular Change Detection expert:
https://medium.com/angular-in-depth/these-5-articles-will-make-you-an-angular-change-detection-expert-ed530d28930

A gentle introduction into change detection in Angular:
https://medium.com/angular-in-depth/a-gentle-introduction-into-change-detection-in-angular-33f9ffff6f10

Understanding Change Detection Strategies in Angular:
https://blog.bitsrc.io/understanding-change-detection-strategies-in-angular-d4ca7744085a

Angular: Keeping the User from Losing Data by Leaving the Page Before Submit:
https://medium.com/better-programming/angular-how-keep-user-from-lost-his-data-by-accidentally-leaving-the-page-before-submit-4eeb74420f0d

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Interceptors and Guards:

Angular CanActivate vs. Interceptors- A Comprehensive Guide
http://medium.com/better-programming/angular-vs-interceptors-guide-c256b72f3415

An Introduction to Angular HTTP Interceptors
https://medium.com/better-programming/angular-http-interceptors-what-are-they-and-how-to-use-them-52e060321088

HTTP interceptors in Angular:
https://blog.angulartraining.com/http-interceptors-in-angular-61dcf80b6bdd

Insider’s guide into interceptors and HttpClient mechanics in Angular:
https://medium.com/angular-in-depth/insiders-guide-into-interceptors-and-httpclient-mechanics-in-angular-103fbdb397bf

Top 10 ways to use Interceptors in Angular:
https://medium.com/angular-in-depth/top-10-ways-to-use-interceptors-in-angular-db450f8a62d6

How to add spinner in Http interceptor Angular (use Google translate Chrome plugin since the page is in Thai):
medium.com/odds-team/how-to-add-spinner-in-http-interceptor-angular-ad14351289f5
https://github.com/phatpan/angularSpinnerExample/blob/master/package.json

Top 10 ways to use Interceptors in Angular:
indepth.dev/top-10-ways-to-use-interceptors-in-angular/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Lazy Loading: 

A Guide to Lazy Loading Modules in Angular 8:
https://levelup.gitconnected.com/a-guide-to-lazy-loading-modules-in-angular-15925dfbfd7f

Angular Resolver - Pre-load data for the next component to load before it loads:
http://medium.com/better-programming/understanding-angular-resolver-what-was-the-problem-before-using-resolver-and-why-we-need-it-7502554ab7a3

Lazy-Loaded Feature Modules and Global Services in Angular 2:
https://medium.com/@kahlil/lazy-loading-and-global-services-in-angular-2-modulewithproviders-fa3b8cf60881

Lazy Loading Feature Modules:
https://angular.io/guide/lazy-loading-ngmodules

Avoid Multiple Service Instances in Lazy Loaded Modules in Angular:
https://egghead.io/lessons/angular-avoid-multiple-service-instances-in-lazy-loaded-modules-in-angular

The Need for Speed: Lazy Load Non-Routable Modules in Angular:
https://netbasal.com/the-need-for-speed-lazy-load-non-routable-modules-in-angular-30c8f1c33093

Boost Angular’s Performance by Lazy Loading your Modules:
https://blog.bitsrc.io/boost-angulars-performance-by-lazy-loading-your-modules-ca7abd1e2304

Lazy Loading External JavaScript Libraries in Angular:
https://codeburst.io/lazy-loading-external-javascript-libraries-in-angular-3d86ada54ec7

Lazy Loading with Angular:
https://medium.com/javascript-in-plain-english/lazy-loading-with-angular-8aafdcfca0fc

Angular quicklink Preloading Strategy:
https://blog.mgechev.com/2018/12/24/quicklink-angular-prefetching-preloading-strategy/

Lazy loading feature modules:
https://angular.io/guide/lazy-loading-ngmodules

Lazy loading Angular modules with Ivy:
https://medium.com/angular-in-depth/lazy-loading-angular-modules-with-ivy-92c3a890eae1

Code-splitting in Angular or how to share components between lazy modules:
https://medium.com/angular-in-depth/angular-code-splitting-or-how-to-share-components-between-lazy-modules-432c755e389c

https://www.concretepage.com/angular-2/angular-module-loading-eager-lazy-and-preloading

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Logging: 

Logging with ngx-logger - NGX Logger is a simple logging module for angular (currently supports angular 6+). It allows "pretty print" to the console, as well as allowing log messages to be POSTed to a URL for server-side logging.

https://github.com/dbfannin/ngx-logger

https://www.npmjs.com/package/ngx-logger?activeTab=readme

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Forms: 

Angular Forms Guide - Template Driven and Reactive Forms (April 2019):
https://blog.angular-university.io/introduction-to-angular-2-forms-template-driven-vs-model-driven/

Angular Forms Guide - Template Driven and Reactive Forms:
https://blog.angular-university.io/introduction-to-angular-2-forms-template-driven-vs-model-driven/

Angular 8|7 ngTemplate & ngTemplateOutlet Example
https://www.techiediaries.com/angular-ngtemplate-ngtemplateoutlet/

Make Your Angular Form’s Error Messages Magically Appear:
https://netbasal.com/make-your-angular-forms-error-messages-magically-appear-1e32350b7fa5

Reactive Template-Driven forms with Angular:
https://blog.angulartraining.com/reactive-template-driven-forms-with-angular-5a5845272b04

Dynamic Nested Reactive Forms In Angular:
https://medium.com/@joshblf/dynamic-nested-reactive-forms-in-angular-654c1d4a769a

Never again be confused when implementing ControlValueAccessor in Angular forms:
https://medium.com/angular-in-depth/never-again-be-confused-when-implementing-controlvalueaccessor-in-angular-forms-93b9eee9ee83

Create a dynamic form with configurable fields and validations using Angular 6
https://medium.com/@mail.bahurudeen/create-a-dynamic-form-with-configurable-fields-and-validations-using-angular-6-994db56834da

Custom Form Validators in Angular 6 Using Regular Expressions
https://medium.com/@zeljkoradic/custom-form-validators-in-angular-6-using-regular-expressions-d421a5655adf

Angular 6 Url Parameters
https://medium.com/better-programming/angular-6-url-parameters-860db789db85

Getting Naked with Angular Reactive Forms:
https://medium.com/@functionalhuman/getting-naked-with-angular-reactive-forms-6bc63e0a7c8d

Understanding Angular Reactive Forms:
https://itnext.io/understanding-angular-reactive-forms-241f9ed42c56

Angular Reactive Templates with ngIf and the Async Pipe:
https://blog.angular-university.io/angular-reactive-templates/


How to format dates and numbers with Angular?
https://blog.angulartraining.com/how-to-format-dates-and-numbers-with-angular-e39d3cf224be

All You Need to Know About ngIf in Angular 
https://levelup.gitconnected.com/all-you-need-to-know-about-ngif-in-angular-a71e56b05a9e

Observable Forms - An alternative approach to reactive forms.  Not yet available as an NPM.  
https://github.com/SanderElias/ngObservableForm

Angular Forms Guide - Template Driven and Reactive Forms:
blog.angular-university.io/introduction-to-angular-2-forms-template-driven-vs-model-driven/

Reactive Forms: 

How to create forms dynamically in Angular 7 using FormControl
https://medium.com/@krishnaregmi/how-to-create-dynamic-forms-in-angular-7-using-formcontrol-a443a2c5e3a9

Angular Reactive Forms: Tips and Tricks
https://netbasal.com/angular-reactive-forms-tips-and-tricks-bb0c85400b58

Dynamic Validation in Angular Dynamic Forms
http://medium.com/@oojhaajay/dynamic-validation-in-angular-dynamic-forms-aca8df20ece0

New way to build Dynamic Reactive Form In Angular
http://medium.com/@oojhaajay/new-way-to-build-dynamic-reactive-form-in-angular-c50978c66d99

New Way to Validate the Angular Reactive Form
http://medium.com/@oojhaajay/new-way-to-validate-the-angular-reactive-form-2c4fe4f13373

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Mapping: 

https://www.freakyjolly.com/angular-7-6-add-google-maps-in-angular-2-plus-applications-using-angular-google-maps-module-agm-core-easily/

Wrapper around the base Google Maps API:

Angular Google Maps component - Part of Angular Material:
github.com/angular/components/blob/master/src/google-maps/README.md

Maps Example with multiple markers:
stackblitz.com/edit/angular-google-maps-demo

Adding Markers to a Google Map (Examples):
https://www.e-education.psu.edu/geog863_gmaps/l3_p7.html

Google MAPS API v3 Reference:
https://developers.google.com/maps/documentation/javascript/reference

Working with the Google Maps API from Angular 7:
https://medium.com/@jkeung/integrating-google-maps-api-w-angular-7-e7672396ce2d


The Simple Guide to Angular Leaflet Maps
https://medium.com/runic-software/the-simple-guide-to-angular-leaflet-maps-41de83db45f1

Quick Guide to Leaflet Controls in Angular.io
https://medium.com/runic-software/quick-guide-to-leaflet-controls-in-angular-io-1b35d0807bdb

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Performance: 

44 quick tips to fine-tune Angular performance: 
https://medium.com/faun/44-quick-tips-to-fine-tune-angular-performance-9f5768f5d945

The Complete Guide to Angular Performance Tuning: 
https://christianlydemann.com/the-complete-guide-to-angular-performance-tuning/

15 Angular Performance Tips & Tricks: 
https://angular-guru.com/blog/angular-performance-tips

Optimizing the Performance of Your Angular Application:
https://netbasal.com/optimizing-the-performance-of-your-angular-application-f222f1c16354

10 Tricks to Optimize Your Angular App:
https://blog.bitsrc.io/10-tricks-to-optimize-your-angular-app-44208f616bf0

Cheatsheet for developing lightning fast progressive Angular applications.:
https://github.com/mgechev/angular-performance-checklist

3 Tips for Angular Runtime Performance from the Real World:
https://blog.angular.io/3-tips-for-angular-runtime-performance-from-the-real-world-d467fbc8f66e

Angular performance tuning Guide:
https://github.com/lydemann/angular-performance-tuning-guide

7 Simple Hacks to Supercharge Your Angular 7 App: 
https://www.talkingdotnet.com/7-simple-hacks-supercharge-web-applications-angular-7/

Angular Best Practices:
https://walkingtree.tech/angular-best-practices/

2.5X Smaller Angular 2 Applications with Google Closure Compiler
https://blog.mgechev.com/2016/07/21/even-smaller-angular2-applications-closure-tree-shaking/

Instant Loading Web Apps with an Application Shell Architecture:
https://developers.google.com/web/updates/2015/11/app-shell

Ahead of time compilation in Angular:
https://blog.mgechev.com/2016/08/14/ahead-of-time-compilation-angular-offline-precompilation/

Web Workers:
https://github.com/angular/angular/tree/master/modules/playground/src/web_workers


Worker Loader - A webpack loader that registers a script as a Web Worker
https://github.com/webpack-contrib/worker-loader

PreBoot - Coordinate transfer of state from server to client view for isomorphic/universal JavaScript web applications
https://github.com/angular/preboot

Consider setting change detection to "onPush":
Change Detection in Angular:
https://vsavkin.com/change-detection-in-angular-2-4f216b855d4c

Everything you need to know about change detection in Angular:
https://indepth.dev/everything-you-need-to-know-about-change-detection-in-angular/

Angular 2 — Improve Performance with trackBy:
https://netbasal.com/angular-2-improve-performance-with-trackby-cc147b5104e5

ngx-quicklink - Quicklink prefetching strategy for the Angular router
https://github.com/mgechev/ngx-quicklink

Building an Angular application for production:
https://blog.mgechev.com/2016/06/26/tree-shaking-angular2-production-build-rollup-javascript/

Best practices for a clean and performant Angular application: 
https://www.freecodecamp.org/news/best-practices-for-a-clean-and-performant-angular-application-288e7b39eb6f/

Angular Best Practices:
https://codeburst.io/angular-best-practices-4bed7ae1d0b7

Angular Checklist: 
https://angular-checklist.io/

50+ Angular Performance Tips from the Pros:
telerik.com/campaigns/kendo-angular-ui/angular-performance-tips-from-the-experts


Google Chrome Dev Tools Lighthouse (Chrome Audit Tab): 

https://developers.google.com/web/tools/lighthouse

Analyze and optimize your website with PageSpeed tools: 
https://developers.google.com/speed/?hl=en-US&utm_source=PSI&utm_medium=incoming-link&utm_campaign=PSI

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Progressive Web Apps - HAve your app still serve in a tunnel (one scenario example):

Angular Push Notifications: a Complete Step-by-Step Guide
https://blog.angular-university.io/angular-push-notifications/

Angular App Shell - Boosting Application Startup Performance
https://blog.angular-university.io/angular-app-shell/

Service Workers - Practical Guided Introduction (several examples)
https://blog.angular-university.io/service-workers/

Angular Service Worker - Step-By-Step Guide for turning your Application into a PWA:
https://blog.angular-university.io/angular-service-worker/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Routing: 

Angular Router Fundamentals: Child Routes, Auxiliary Routes, Master-Detail:
https://blog.angular-university.io/angular2-router/

Angular Router: A Complete Example (build a Bootstrap Navigation Menu):
https://blog.angular-university.io/angular-2-router-nested-routes-and-nested-auxiliary-routes-build-a-menu-navigation-system/

Adding Routing to your Angular 8 App:
https://www.techiediaries.com/angular-routing-tutorial/

How to reuse common layouts in Angular using Router:
https://medium.com/angular-in-depth/angular-routing-reusing-common-layout-for-pages-from-different-modules-440a23f86b57

The Three Pillars of Angular Routing. Angular Router Series Introduction:
https://medium.com/angular-in-depth/the-three-pillars-of-angular-routing-angular-router-series-introduction-fb34e4e8758e

The Three Pillars of the Angular Router - Router States and URL Matching:
https://medium.com/angular-in-depth/angular-routing-series-pillar-1-router-states-and-url-matching-12520e62d0fc?

Angular Router Series: Pillar 2 - Understanding The Router's Navigation Cycle:
https://medium.com/angular-in-depth/angular-router-series-pillar-2-navigation-d050286bf4fa?

Angular Router Series: Pillar 3 - Lazy Loading, AOT, and Preloading:
https://medium.com/angular-in-depth/angular-router-series-pillar-3-lazy-loading-aot-and-preloading-a23a046c51f0?

Angular Context: Easy Data-Binding for Nested Component Trees and the Router Outlet
https://medium.com/angular-in-depth/angular-context-easy-data-binding-for-nested-component-trees-and-the-router-outlet-a977efacd48

Reloading current route in Angular 5 / Angular 6 / Angular 7
https://medium.com/engineering-on-the-incline/reloading-current-route-on-click-angular-5-1a1bfc740ab2

Angular Routing — A Better Pattern For Large Scale Apps:
https://medium.com/@shairez/angular-routing-a-better-pattern-for-large-scale-apps-f2890c952a18

Angular Router Animations: the tricky bits:
https://medium.com/frontend-coach/angular-router-animations-what-they-dont-tell-you-3d2737a7f20b

Understanding Angular Guards:
http://codeburst.io/understanding-angular-guards-347b452e1892

How To Navigate To External Website In Angular - 4 Ways with examples: 
https://medium.com/bb-tutorials-and-thoughts/how-to-navigate-to-external-website-in-angular-a80569aa94d5

Add in-app navigation with routing:
https://angular.io/tutorial/toh-pt5

ngx-quicklink - Quicklink prefetching strategy for the Angular router
https://github.com/mgechev/ngx-quicklink

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Security: 

JWT: The Complete Guide to JSON Web Tokens:
https://blog.angular-university.io/angular-jwt/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Services: 

Consuming a RESTful data service in Angular:
https://openliberty.io/guides/rest-client-angular.html


How to Create a Service with HttpClient and Injectable in Angular 9/8
http://itnext.io/how-to-create-a-service-with-httpclient-and-injectable-in-angular-9-8-e3cc50c24c83

How To Fix Angular HttpClient Not Escaping URL Parameters
http://medium.com/better-programming/how-to-fix-angular-httpclient-not-escaping-url-parameters-ddce3f9b8746

Singleton Services:
https://angular.io/guide/singleton-services

angular-7-lazy-loading-singleton-service - StackBlitz:
https://stackblitz.com/edit/angular-7-lazy-loading-singleton-service

Angular 7/8 By Example with HttpClient, Async Pipe and Observables:
https://www.techiediaries.com/angular-by-example-httpclient-get/
https://github.com/techiediaries/angular-httpclient-examples

Angular 9/8 How-To: Pass URL Query Parameters with HttpClient, HttpParams and fromString:
https://www.techiediaries.com/angular-url-query-parameters-with-httpparams-and-fromstring/

JavaScript Async/Await with Angular 7/8 Observable and HTTP Example:
https://www.techiediaries.com/javascript-async-await-tutorial/

Angular HttpClient Examples (GET, POST , UPDATE, DELETE):
https://github.com/techiediaries/angular-httpclient-examples

Best Practices for Versioning REST APIs:
https://medium.com/better-programming/best-practices-for-versioning-an-api-for-rest-apis-530a9398f311

Fake Your Angular Backend Until You Make It:
https://blog.angulartraining.com/fake-your-angular-backend-until-you-make-it-8d145f713e14

Angular: Understanding Modules and Services:
https://medium.com/@michelestieven/organizing-angular-applications-f0510761d65a

The Ultimate Answer To The Very Common Angular Question: subscribe() vs | async Pipe
https://medium.com/angular-in-depth/angular-question-rxjs-subscribe-vs-async-pipe-in-component-templates-c956c8c0c794

How to map REST API data using Decorator pattern in Angular 6:
https://blog.usejournal.com/how-to-map-rest-api-data-using-decorator-pattern-in-angular-6-94eb49ba16b1

A Generic HTTP Service Approach for Angular Applications:
https://medium.com/better-programming/a-generic-http-service-approach-for-angular-applications-a7bd8ff6a068

How to prevent HTTP request caching with Angular HttpClient:
https://medium.com/better-programming/how-to-prevent-http-request-caching-with-angular-httpclient-e82abf8b157d

How to build Angular apps using Observable Data Services - Pitfalls to avoid (April 2019):
https://blog.angular-university.io/how-to-build-angular2-apps-using-rxjs-observable-data-services-pitfalls-to-avoid/

Angular - HTTP POST Request Examples:
jasonwatmore.com/post/2019/11/21/angular-http-post-request-examples

Angular - HTTP GET Request Examples:
jasonwatmore.com/post/2019/09/06/angular-http-get-request-examples

Angular Services Examples:
https://howtodoinjava.com/angular/angular2-service/

Thinkster.io - Api Services wrapper:
https://thinkster.io/tutorials/building-real-world-angular-2-apps/intercept-and-manipulate-http-requests
https://github.com/gothinkster/realworld/tree/master/api
https://thinkster.io/tutorials/building-real-world-angular-2-apps

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

State Management - Overview: 

Managing State in Angular Applications:
https://blog.nrwl.io/managing-state-in-angular-applications-22b75ef5625f

A Guide to Managing Loading State for Angular App API Requests
https://levelup.gitconnected.com/a-guide-to-managing-loading-state-for-angular-app-api-requests-83b7429d0e3a

Managing State in Angular Applications using NgRx:
https://blog.nrwl.io/using-ngrx-4-to-manage-state-in-angular-applications-64e7a1f84b7b

Angular Universal + Caching (TransferState):
https://itnext.io/angular-universal-caching-transferstate-96eaaa386198

Angular Service Layers: Redux, RxJs and Ngrx Store - When to Use a Store And Why?:
https://blog.angular-university.io/angular-2-redux-ngrx-rxjs/


State Management - Akita: 

State management with Angular 8 and Akita:
https://medium.com/javascript-in-plain-english/state-management-with-angular-8-and-akita-b842aa22b95e


State Management - NgXS (like NGRX but with less boilerplate code): 

NGXS — Thoughts, Patterns, Architecture and best practices:
itnext.io/ngxs-thoughts-patterns-architecture-and-best-practices-c991c42618d9

NGXS Facade:
medium.com/ngxs/ngxs-facade-3aa90c41497b

Why I Prefer NGXS over NGRX:
blog.singular.uk/why-i-prefer-ngxs-over-ngrx-df727cd868b5

Keeping Multiple Tabs In Sync Using the NGXS State Management Library, RxJS, and localStorage:
levelup.gitconnected.com/keeping-multiple-tab-in-sync-using-ngxs-state-management-library-rxjs-and-localstorage-840c0bf615fa

Set Up an Angular 8 Project with Material and NGXS:
levelup.gitconnected.com/setup-angular-8-project-with-material-and-ngxs-9589f51b6927

Announcing NGXS 3.4 — Immutability helpers, HMR, SSR & much more:
medium.com/ngxs/announcing-ngxs-3-4-immutability-helpers-hmr-ssr-much-more-a1fa0bd9f36f

A New Way of Dispatching Actions With Ngxs for Angular:
medium.com/better-programming/a-new-way-of-dispatching-actions-with-ngxs-for-angular-7541f0adb812

NGXS Schematics - Schematics for @ngxs/store:
github.com/ngxs/schematics

Manage State in Angular with NGXS:
alligator.io/angular/ngxs

NGXS Quick Start:
fireship.io/lessons/ngxs-quick-start-angular-state-management/

Angular NGXS CRUD example:
daptontechnologies.com/angular-ngxs-crud/

NGXS with HMR Plugin:
medium.com/ngxs/ngxs-with-hmr-plugin-c2004bcf576d

Immutable state in NGXS - Part I:
medium.com/ngxs/immutable-state-in-ngxs-part-i-ba318bfc5bb3

Immutable state in NGXS — Part II.:
medium.com/@splincode/immutable-state-in-ngxs-part-ii-bf249929e5fb

Immutable state in NGXS — Part III:
medium.com/@splincode/immutable-state-in-ngxs-part-iii-738629891301

Part I. What does NGXS offer?:
medium.com/ngxs-stories/why-you-should-use-ngxs-af5433e19829

NGXS State Operators:
medium.com/ngxs/ngxs-state-operators-8b339641b220

Introduction to NGXS - Angular State Management:
medium.com/@chameeradulanga87/introduction-to-ngxs-angular-state-management-2516b2d9917e

NGXS — Initial impressions of an Angular state management solution:
medium.com/q-software/ngxs-initial-impressions-of-an-angular-state-management-solution-a44b59f52508

State Management in Angular:
medium.com/@dazcyril/state-management-in-angular-9ebae914ca9a

NGXS — Components and States:
medium.com/criteo-labs/ngxs-components-and-states-b237a15c5de0

Action packed route resolution with NGXS:
medium.com/@alvino.aj/action-packed-route-resolution-with-ngxs-8df49f0ad7b4

NGXS Forms:
medium.com/@nacim.issam/ngxs-forms-e8964b799e0b

Boilerplate reduction#ngxs-reducers:
medium.com/@lastseeds/boilerplate-reduction-ngxs-reducers-77bb8fe428a7

State Management - NGRX: 

https://ngrx.io/

Official Example App for NgRx:
https://github.com/ngrx/platform/tree/master/projects/example-app


Angular: NGRX a clean and clear Introduction
https://medium.com/frontend-fun/angular-ngrx-a-clean-and-clear-introduction-4ed61c89c1fc

How to Start Flying with Angular and NgRx
https://blog.angularindepth.com/how-to-start-flying-with-angular-and-ngrx-b18e84d444aa

NGRX Tips & Tricks:
https://blog.angularindepth.com/ngrx-tips-tricks-69feb20a42a7

Angular Service Layers: Redux, RxJs and Ngrx Store - When to Use a Store And Why?
https://blog.angular-university.io/angular-2-redux-ngrx-rxjs/

NgRx?—?Best Practices for Enterprise Angular Applications
https://itnext.io/ngrx-best-practices-for-enterprise-angular-applications-6f00bcdf36d7

NgRx: Patterns and Techniques
https://blog.nrwl.io/ngrx-patterns-and-techniques-f46126e2b1e5

NgRx Facades: Pros and Cons
https://auth0.com/blog/ngrx-facades-pros-and-cons/

Sync Your State in Local Storage With NgRx:
https://medium.com/better-programming/sync-your-state-in-local-storage-with-ngrx-9d6ceba93fc0

I'm not ready for NgRx:
https://medium.com/briebug-blog/im-not-ready-for-ngrx-2db4a96c1dd4

NgRx — Best Practices for Enterprise Angular Applications:
https://itnext.io/ngrx-best-practices-for-enterprise-angular-applications-6f00bcdf36d7

Angular Ngrx DevTools: Important Practical Tips:
https://blog.angular-university.io/angular-ngrx-devtools/

Angular NgRx Entity - Complete Practical Guide
https://blog.angular-university.io/ngrx-entity/

John Papa - NGConf Talk - These are the Angular Tips you are looking for:
youtu.be/2ZFgcTOcnUg

ngrx Data - Simplifies management of entity data while reducing the amount of explicitness through generics and convention over configuration (with full overrides available).
ngrx.io/guide/data

Udemy courses on NgRx and ngrx data:
udemy.com/course/ngrx-course/
udemy.com/course/angular-full-app-with-angular-material-angularfire-ngrx/

Why NgRx Data? Learn the Main Advantages youtube.com/watch?v=NaqINd5gWZY

Understanding NgRx - Why State Management, what are the Benefits?
youtube.com/watch?v=0NpLwr3n_7g

Angular with ngRx and experimental ngrx-data helper:
github.com/johnpapa/angular-ngrx-data

Sample app that can be expanded to use ngrx-data:
github.com/johnpapa/ngrx-data-lab/

@ngrx/data Will Change Your Life:
medium.com/better-programming/ngrx-data-will-change-your-life-8528736e4fc0

Angular ngrx-data - Zero Ngrx Boilerplate (John Papa article):
diycode.cc/projects/johnpapa/angular-ngrx-data

Dynamic NGRX - Full NGRX Entity Management with 5 lines of codes:
medium.com/@jonathanwoahn/dynamic-ngrx-full-ngrx-entity-management-with-5-lines-of-code-7f3e8704803c

Introducing NgRx Auto-Entity:
medium.com/briebug-blog/introducing-ngrx-auto-entity-fdd755ce119b

Exception Handling with NgRx Effects:
medium.com/@andrew_evans/exception-handling-with-ngrx-effects-70ec942e6465

Organize your application forms using NGX Formly:
medium.com/hackernoon/organize-your-forms-application-using-ngx-fomrly-796150461045

Every mapper in its place with NgRx Effects:
medium.com/@jon.rista/a-place-for-every-mapper-228f71e56f1b

Mock your NGRX store, the easy way!
medium.com/@bo.vandersteene/mock-your-ngrx-store-on-the-easy-way-68c66d4bea63

NgRx in AG04 (Discusses architecture and ngrx):
medium.com/agency04/ngrx-state-per-module-24b83a191924

NGRX State Management — Overview:
https://medium.com/@rinciarijoc/ngrx-state-management-overview-af7c458abfdc

Quick dive into centralizing your data in Angular with ngrx/router-store:
medium.com/razroo/quick-dive-into-centralizing-your-data-in-angular-with-ngrx-router-store-ca4b177b0b10

Ng Container Hack for Structural Directives:
medium.com/razroo/ng-container-hack-for-structural-directives-b01d5333aa0b

Enterprise-Angular-applications-with-ngrx-and-nx (Github):
https://github.com/duncanhunter/Enterprise-Angular-applications-with-ngrx-and-nx

NgRX Best Practices for Enterprise Angular Applications:
https://itnext.io/ngrx-best-practices-for-enterprise-angular-applications-6f00bcdf36d7

Angular: Get Started With NgRx - The fundamentals of NgRx, with code examples: 
https://medium.com/better-programming/angular-getting-started-with-ngrx-75b9139c23eb

NGRX VS. NGXS VS. AKITA VS. RXJS state management libraries compared:
https://ordina-jworks.github.io/angular/2018/10/08/angular-state-management-comparison.html


NgRx Course -
angulardeveloper.io/blog/introduction-redux/

NgRx — Best Practices for Enterprise Angular Applications:
itnext.io/ngrx-best-practices-for-enterprise-angular-applications-6f00bcdf36d7

Todd Motto courses on Angular, NgRx and RxJS:
ultimatecourses.com/courses/angular

NgRx Blog:
medium.com/ngrx

NgRx Docs:
ngrx.io/docs

NgRx Resources:
ngrx.io/resources

NgRx — Best Practices for Enterprise Angular Applications: 
itnext.io/ngrx-best-practices-for-enterprise-angular-applications-6f00bcdf36d7
github.com/wesleygrimes/angular-ngrx-chuck-norris

NgRx Blog on Medium:
medium.com/ngrx

Announcing NgRx Version 8: @ngrx/data, creator functions, run-time checks, and isolated tests: 
medium.com/ngrx/announcing-ngrx-version-8-ngrx-data-create-functions-runtime-checks-and-mock-selectors-a44fac112627

@ngrx/schematics: 
ngrx.io/guide/schematics

NgRx: Patterns and Techniques:
blog.nrwl.io/ngrx-patterns-and-techniques-f46126e2b1e5

Building an Online Store Using ngrx/store and Angular:
telerik.com/blogs/building-an-online-store-using-ngrx-store-and-angular
github.com/HackAfro/reactive-fruit-store

Angular NgRx Redux Quick Start Tutorial:
fireship.io/lessons/angular-ngrx-redux-starter-guide/

Angular NgRx starter:
github.com/tomastrajan/angular-ngrx-material-starter

PluralSight GitHub repo for "pluralsight-nx-play-by-play" course:
github.com/duncanhunter/pluralsight-nx-play-by-play

NGRX Data (Now included in latest NGRX 8): 

NgRx Data is an extension that offers a gentle introduction to NgRx by simplifying management of entity data while reducing the amount of explicitness.  Reduces CRUD boilerplate through the use of generics. 

Documentation:
https://ngrx.io/guide/data

John Papa - NGConf Talk - These are the Angular Tips you are looking for.  One of the tips is the use of NgRx Data:
youtu.be/2ZFgcTOcnUg

ngrx Data - Simplifies management of entity data while reducing the amount of explicitness through generics and convention over configuration (with full overrides available).
ngrx.io/guide/data

Udemy courses on NgRx and ngrx data:
udemy.com/course/ngrx-course/
udemy.com/course/angular-full-app-with-angular-material-angularfire-ngrx/

Why NgRx Data? Learn the Main Advantages youtube.com/watch?v=NaqINd5gWZY

Angular with ngRx and experimental ngrx-data helper:
github.com/johnpapa/angular-ngrx-data

Sample app that can be expanded to use ngrx-data:
github.com/johnpapa/ngrx-data-lab/

@ngrx/data Will Change Your Life:
medium.com/better-programming/ngrx-data-will-change-your-life-8528736e4fc0

Angular ngrx-data - Zero Ngrx Boilerplate (John Papa article):
diycode.cc/projects/johnpapa/angular-ngrx-data

NgRx and Angular Route Guards
https://levelup.gitconnected.com/ngrx-and-angular-route-guards-a3fc3d5255f8




State Management - More lightweight approaches without NGRX: 

View Facades + RxJS: 
https://medium.com/angular-in-depth/angular-you-may-not-need-ngrx-e80546cc56ee

My favorite state management technique in Angular — RxJS Behavior Subjects
https://medium.com/@rmcavin/my-favorite-state-management-technique-in-angular-rxjs-behavior-subjects-49f18daa31a7

Simple state management in Angular with only services and RxJs:  
https://dev.to/avatsaev/simple-state-management-in-angular-with-only-services-and-rxjs-41p8
https://stackblitz.com/edit/angular-rxjs-store

Angular-Extensions/Model -  Simple state management with minimalist API, one way data flow, multiple model support and immutable data exposed as RxJS Observable. 
https://tomastrajan.github.io/angular-model-pattern-example#/about
https://github.com/angular-extensions/model

Minimalist store for Rxjs with Facades: 
https://github.com/mailok/store-lite

RxJS and Facades: 
https://medium.com/razroo/rxjs-and-facades-275eae9ff466

NgRx + Facades: Better State Management:
https://medium.com/@thomasburlesonIA/ngrx-facades-better-state-management-82a04b9a1e39

Traditional pull based approach with rxjs:
https://stackblitz.com/edit/facade-traditional-no-rxjs

Dynamic push based approach with facade and RxJS:
https://stackblitz.com/edit/facades-with-rxjs-only

View Facades + RxJS:
https://medium.com/angular-in-depth/angular-you-may-not-need-ngrx-e80546cc56ee

Thomas Burleson - Stackblitz:
https://stackblitz.com/@ThomasBurleson

Thomas Burleson - GitHub Repos:
https://github.com/ThomasBurleson?before=Y3Vyc29yOnYyOpK5MjAxNi0wNy0yOFQxMzo0OTozMS0wNDowMM4D1uxo&tab=repositories

Ngxp - Store-Service - Adds an abstraction layer / facade between Angular components and the @ngrx store:
https://github.com/ngxp/store-service

RxCache - A light weight Angular cache service built with Observables: 
https://github.com/adriandavidbrand/ngx-rxcache

Angular state management with RxCache: 
https://medium.com/@adrianbrand/angular-state-management-with-rxcache-468a865fc3fb

User management example using RxCache:
https://stackblitz.com/edit/angular-jxqaiv




Thomas Trajan's "Model" simple state management extension for Angular:
https://github.com/angular-extensions/model

The Angular Model (@angular-extensions/model) or also previously called ngx-model: 
https://medium.com/angular-in-depth/model-pattern-for-angular-state-management-6cb4f0bfed87

npm site:
https://www.npmjs.com/package/%40angular-extensions/model

Demo:
https://stackblitz.com/edit/angular-extensions-model-with-decorators

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Styling and Layout: 

How To Style Angular Application Loading With Angular CLI Like a Boss
https://medium.com/@tomastrajan/how-to-style-angular-application-loading-with-angular-cli-like-a-boss-cdd4f5358554

Creating an Angular Web App for Multiple Views and Screen Sizes:
https://medium.com/better-programming/creating-angular-webapp-for-multiple-views-and-screen-sizes-50fe8a83c433

Angular Flex-Layout: Flexbox and Grid Layout for Angular Component:
medium.com/angular-in-depth/angular-flex-layout-flexbox-and-grid-layout-for-angular-component-6e7c24457b63

Angular Mastery: NgClass & NgStyle
https://medium.com/angular-in-depth/angular-mastery-ngclass-ngstyle-e972dd580889

How To Build Responsive Layouts With Bootstrap 4 and Angular 6 
https://medium.com/@tomastrajan/how-to-build-responsive-layouts-with-bootstrap-4-and-angular-6-cfbb108d797b

Theming Angular Apps:
https://medium.com/swlh/theming-angular-c869827738c3

Angular Flex-Layout: Flexbox and Grid Layout for Angular Component:
https://medium.com/angular-in-depth/angular-flex-layout-flexbox-and-grid-layout-for-angular-component-6e7c24457b63

Angular — Advanced Styling Guide (v4+):
https://medium.com/google-developer-experts/angular-advanced-styling-guide-v4-f0765616e635

How to Use CSS Grid with Angular:
https://medium.com/swlh/how-to-use-css-grid-with-angular-96759f5378c2

Angular + Font Awesome in 5 Easy Steps With angular-fontawesome:
https://medium.com/better-programming/angular-font-awesome-in-5-easy-steps-with-angular-fontawesome-2b80129bcd7

Angular :host, :host-context, ::ng-deep - Angular View Encapsulation:
https://blog.angular-university.io/angular-host-context/

Angular dynamic styling example using light vs dark mode styling:
https://stackblitz.com/edit/angular-dynamic-style-change

3+ Ways to Add Bootstrap 4 to Angular 9/8 With Example & Tutorial
https://www.techiediaries.com/angular-bootstrap

ngx-bootstrap (supports Bootstrap 3 & 4) and does not require JQuery libraries:
https://valor-software.com/ngx-bootstrap/#/

Using ngx-bootstrap on Stackblitz with Angular 8: 
https://medium.com/@ajdin.imsirovic/using-ngx-bootstrap-on-stackblitz-with-angular-8-cc3e9fda6e25

Additional ngx-bootstrap companion modules:
https://github.com/valor-software/ng2-plans

https://valor-software.com/ngx-bootstrap/#/documentation

What is ngx boostrap and how to use it?  
https://www.edureka.co/blog/ngx-bootstrap/

How to use CSS to make a responsive sidebar nav layout: 
https://www.w3schools.com/howto/howto_css_sidebar_responsive.asp

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Templates: 

Angular templates and views:
https://howtodoinjava.com/angular/angular-templates-and-views/

Writing More Complex Angular Templates:
https://medium.com/javascript-in-plain-english/writing-more-complex-angular-templates-d9884c029156

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Caching on the Client Side: 

Fastest way to cache for lazy developers - Angular with RxJS:
https://medium.com/angular-in-depth/fastest-way-to-cache-for-lazy-developers-angular-with-rxjs-444a198ed6a6

Client-side caching with Angular (Part 1):
https://dev.to/maurogarcia_19/client-side-caching-with-angular-2i6l

Client-side caching with Angular (Part 2) - Versioning:
https://dev.to/maurogarcia_19/client-side-caching-with-angular-part-2-cleaning-up-after-releasing-a-new-version-57ee

LocalForage - localForage is a fast and simple storage library for JavaScript. localForage improves the offline experience of your web app by using asynchronous storage (IndexedDB or WebSQL) with a simple, localStorage-like API. localForage uses localStorage in browsers with no IndexedDB or WebSQL support.
https://www.npmjs.com/package/localforage

https://github.com/cyrilletuzi/angular-async-local-storage

https://blog.thoughtram.io/angular/2018/03/05/advanced-caching-with-rxjs.html

Client-Side Caching In Angular 8 Using HTTP Interceptor
https://www.c-sharpcorner.com/article/client-side-caching-in-angular-8-using-http-interceptor/

Async local storage for Angular:
https://www.npmjs.com/package/@ngx-pwa/local-storage

Install:
npm install @ngx-pwa/local-storage@7

===============================

Angular Local-Storage-Service with RxJs Observables:
https://github.com/lelong37/angular-localstorage-observables

=================================
https://medium.com/@garfunkel61/https-medium-com-garfunkel61-angular-data-provider-services-in-memory-data-cache-c495a0ac35da

https://medium.com/@garfunkel61/rxjs-data-cache-7e1b7cb4c8f3

Webstorage services for Angular - provides service wrappers for the Web Storage API. Whenever your application needs to use localStorage or sessionStorage, instead of using them directly you can make use of the wrapped versions provided:
https://www.npmjs.com/package/ngx-webstorage-service

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Deployments and Builds: 


Configure angular 2 project with maven and spring REST:
https://stackoverflow.com/questions/37512154/configure-angular-2-project-with-maven-and-spring-rest/37530519

Setup a single Angular 6 and Spring Boot project with Maven:
https://medium.com/@frithjof.hoppe/setup-a-single-angular-6-and-spring-boot-project-with-maven-ac656c7753ff

https://github.com/stephanrauh/SpringBoot2019:


Using Angular with Maven:
https://www.beyondjava.net/angular-maven

Deploy Angular Maven WebApp on Tomcat:
https://csetutorials.com/deploy-angular-2-maven-webapp-on-tomcat.html

Angular Revisited: Tree-shakable Components and Optional NgModules
https://medium.com/angular-in-depth/angular-revisited-tree-shakable-components-and-optional-ngmodules-329a4629276d

A Guide to Angular 8's Differential Loading - Angular 8 now sends separate bundles to legacy browsers by default:
https://auth0.com/blog/angular-8-differential-loading/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Generate PDFs from Angular: 

Export to PDF with the PDFMake Library in an Angular 8 Application
https://levelup.gitconnected.com/export-to-pdf-with-the-pdfmake-library-in-an-angular-8-application-f0f83abfe703

PDFMake - Client/server side PDF printing in pure JavaScript:
http://pdfmake.org/#/

Export to PDF with the PDFMake Library in an Angular 8 Application:
https://levelup.gitconnected.com/export-to-pdf-with-the-pdfmake-library-in-an-angular-8-application-f0f83abfe703

html2pdf.js - Client-side HTML-to-PDF rendering using pure JS.: 
https://ekoopmans.github.io/html2pdf.js/
https://github.com/eKoopmans/html2pdf.js
https://www.npmjs.com/package/html2pdf.js/v/0.9.0

Working html2pdf example:

https://embed.plnkr.co/ajGV0GqE0CYX57aTgdGK/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Internationalization (multi-language): 

Add internationalization (i18n) to an Angular app:
http://levelup.gitconnected.com/add-internationalization-i18n-to-an-angular-app-b8fa8b51deea

Strategies for Cache-Busting Translation Files in Angular:
https://netbasal.com/strategies-for-cache-busting-translation-files-in-angular-86143ee14c3c

Lazy Load and Encapsulate i18n Files in Angular with Transloco:
https://medium.com/angular-in-depth/lazy-load-and-encapsulate-i18n-files-in-angular-with-transloco-55af44885797

Angular: Runtime i18n Made Simple:
http://medium.com/wizdm-genesys/angular-runtime-i18n-made-simple-1f1c510da686

Introducing Transloco: Angular Internationalization Done Right:
https://netbasal.com/introducing-transloco-angular-internationalization-done-right-54710337630c

Multi-Language Date Formats with Angular Material:
https://medium.com/@kristinahertmann/multi-language-date-formats-with-angular-material-b8598415d117

Internationalizing your Angular app:
https://medium.com/briebug-blog/internationalizing-your-angular-app-aeebb4e50bfe

Internationalization in Angular:
medium.com/razroo/internationalization-in-angular-424b0dc2aac8

Angular NGX-Translate lazy loaded modules:
medium.com/javascript-in-plain-english/angular-7-ngx-translate-lazy-loaded-modules-36d586b82ba4

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

ngModules: 

Understanding Angular modules (NgModule) and their scopes:
https://medium.com/@cyrilletuzi/understanding-angular-modules-ngmodule-and-their-scopes-81e4ed6f7407

Making Configurable Angular Feature Modules Using Strategy Pattern:
https://medium.com/monstar-lab-bangladesh-engineering/making-configurable-angular-feature-modules-using-strategy-pattern-b8f43340550a

Angular NgModule - Ahead Of Time Compilation (AOT) And Lazy Loading:
https://blog.angular-university.io/angular2-ngmodule/

Preloading Modules in Angular:
medium.com/razroo/preloading-modules-in-angular-f670f9df5269

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

ng serve Issues: 

ng serve --host localhost.penske.com --disableHostCheck true

Avoiding the CORS violation issue when in localhost mode:
https://medium.com/@dtkatz/3-ways-to-fix-the-cors-error-and-how-access-control-allow-origin-works-d97d55946d9

Plug-in to temporarily fix/avoid the issue:
https://chrome.google.com/webstore/detail/moesif-orign-cors-changer/digfbfaphojjndkpccljibejjbppifbc?hl=en-US

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Standards for Angular:

Official Angular Style Guide:
https://angular.io/guide/styleguide

Component Library:
PrimeNG - Open source (MIT License) components for Angular
https://www.primefaces.org/primeng/#/

Data Grid:
AG Grid - Open source (MIT License) data grid for Angular
https://www.ag-grid.com/

Folder by type vs folder by feature directory structure standards:
https://medium.com/@CKGrafico/taking-decisions-to-structure-big-projects-with-hooks-stores-services-and-more-a703c7874480

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Tooling: 

Angular Developer Tools:

https://blog.bitsrc.io/11-top-angular-developer-tools-for-2020-3d2621f1e157

Visual Studio Code - IDE perfectly suited for Angular development:
https://code.visualstudio.com/

StackBlitz - Online Angular development environment:
https://stackblitz.com/edit/angular

Augury - (Does not yet support Angular 8/9) - Browser plugin for Angular in developers tools console (PENSKE NOTE: This causes massive issues within apps like ServiceNet and Digital Football which use a popup for Vehicle information that causes Java errors which then cause log4j email appenders to fire off.  This happens because Augury attempts to intercept calls to the Chrome browser window in a way that ends up infinitely retrying the popup, resulting in essential a self DDOS attack !!!!!!!!!)
https://augury.rangle.io/

Angular Console - The power of the Angular CLI. The convenience of an APP:
https://angularconsole.com/

A tour of Angular Console:
https://auth0.com/blog/how-to-use-angular-console/

Angular CoPilot:
https://angulardoc.github.io/#/products

Angular CoPilot VSCode Extension:
https://marketplace.visualstudio.com/items?itemName=Metatype.copilot-vscode
https://medium.com/angulardoc/introducing-copilot-for-vs-code-c1b1a16bdd21

Codelyzer - tatic analysis for Angular projects. http://codelyzer.com/
https://github.com/mgechev/codelyzer

Angular State Inspector:
https://chrome.google.com/webstore/detail/angular-state-inspector/nelkodgfpddgpdbcjinaaalphkfffbem?hl=en

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Testing: 

Angular Testing:

UI-jar - A drop in module to automatically create a living style guide based on the test you write for your components:
https://github.com/ui-jar/ui-jar

Jest - JavaScript Testing Framework with a focus on simplicity.
https://jestjs.io/

Sinon.js - Standalone test spies, stubs and mocks for JavaScript. Works with any unit testing framework.
https://sinonjs.org/

The Hitchhiker's Guide to Testing Spring Boot APIs and Angular Components with WireMock, Jest, Protractor, and Travis CI
https://developer.okta.com/blog/2018/05/02/testing-spring-boot-angular-components

Testing Asynchronous Code in Angular Using FakeAsync
https://netbasal.com/testing-asynchronous-code-in-angular-using-fakeasync-fc777f86ed13

Angular: Unit Testing Jasmine, Karma (step by step):
https://medium.com/frontend-fun/angular-unit-testing-jasmine-karma-step-by-step-e3376d110ab4

Too good to be true? Taking a free automated front end testing tool for a drive:
https://medium.com/swlh/too-good-to-be-true-taking-a-free-automated-front-end-testing-tool-for-a-drive-99ac66d14074

Cloud based testing front end:
https://testproject.io/

Angular Schematics: Unit Testing:
https://blog.angular.io/angular-schematics-unit-testing-3a0a9aaab186

Testing HTTP Requests in Angular with HttpClientTestingModule:
https://medium.com/better-programming/testing-http-requests-in-angular-with-httpclienttestingmodule-3880ceac74cf

Bake error handling into your code from the start, with these 3 rigorous unit testing practices (Framework agnostic):
medium.com/swlh/bake-error-handling-into-your-code-from-the-start-with-these-3-rigorous-unit-testing-practices-82f75075ba70

Simplified Angular unit testing:
medium.com/@meshileya/simplified-angular-unit-testing-caffe0fccf31

Guide to Angular unit testing:
medium.com/swlh/guide-to-angular-unit-testing-6c9466bcbcd0

Next-level testing in Angular Ivy version 9:
indepth.dev/next-level-testing-in-angular-ivy-version-9/

The Complete Guide to Angular Testing and a Weird Trick for Faster Unit Tests (2019): 
https://christianlydemann.com/complete-guide-to-angular-testing/

Testing Angular Components With @Input():
medium.com/better-programming/testing-angular-components-with-input-3bd6c07cfaf6


Testing - Using Cypress: 

Visual testing with Cypress:
https://medium.com/briebug-blog/visual-testing-with-cypress-9a0b7443e427

Switching to Cypress from Protractor in Less Than 30 Seconds:
https://medium.com/briebug-blog/switching-to-cypress-from-protractor-in-less-than-30-seconds-b60b00def4a0



Testing - Mocking: 

Mocking HTTP Services With Angular Generically
https://www.beyondjava.net/mocking-http-services-with-angular-generically

Angular 7 - Mock Backend Example for Backendless Development 
https://jasonwatmore.com/post/2019/05/02/angular-7-mock-backend-example-for-backendless-development


Angular5+ Unit Test Generator For Components, Directive, Services, and Pipes: 
https://github.com/allenhwkim/ngentest


Protractor - End to end testing for Angular projects:
https://protractor.angular.io/


Generate Angular Unit Test Automatically
https://medium.com/allenhwkim/generate-angular-unit-tests-automatically-1300601ed73

SimonTest VSCode Extension:
https://marketplace.visualstudio.com/items?itemName=SimonTest.simontest

Paid extension.  $10 per month or $100 per year:
https://gumroad.com/l/SimonTest


Spectator V4: A Powerful Tool to Simplify Your Angular Tests!:
https://netbasal.com/spectator-v4-a-powerful-tool-to-simplify-your-angular-tests-bd65a0bf317e

Spectator - A Powerful Tool to Simplify Your Angular Tests. Spectator helps you get rid of all the boilerplate grunt work, leaving you with readable, sleek and streamlined unit tests.
github.com/ngneat/spectator?utm_source=mybridge&utm_medium=blog&utm_campaign=read_more

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Symantec Versioning: 

What is Symantic Versioning:
https://docs.npmjs.com/about-semantic-versioning

Symantic Versioning Calculator:
https://semver.npmjs.com/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

RxJS: 

Learn RxJs:
https://www.learnrxjs.io/

Rx Primer:
https://www.learnrxjs.io/concepts/rxjs-primer.html

RxJs Overview:
https://rxjs-dev.firebaseapp.com/guide/overview

ReactiveX - An API for asynchronous programming with observable streams:
http://reactivex.io/

Reactive Extensions Library for JavaScript:
https://rxjs.dev/

RxJs books and topics:
https://chrisnoring.gitbooks.io/rxjs-5-ultimate/content/

Rx Visualizer:
https://rxviz.com/

Rx Visualization:
https://fingerpich.github.io/rx-visualization/

Interactive diagrams of Rx Observables
https://rxmarbles.com/

You can read RxJS (2017) in Action from Manning online for free:
https://www.manning.com/books/rxjs-in-action#toc

RxJS forkJoin Best Practices - Never Use Array Indexes in Subscribe!
http://medium.com/better-programming/rxjs-forkjoin-never-use-array-indexes-in-subscribe-1f4005582ae8

Handling Form Race Conditions in Angular With RxJS
http://medium.com/better-programming/handling-angular-forms-race-conditions-with-rxjs-b4e31bb73ba0

Preventing Memory Leaks in Angular Observables with ngOnDestroy
http://medium.com/javascript-in-plain-english/preventing-memory-leaks-in-angular-observables-with-ngondestroy-b41b8f293714

Subjects, Replay Subjects, Behavior Subjects, and Async Subjects in RxJS:
https://medium.com/better-programming/subjects-replay-subjects-behavior-subjects-async-subjects-in-rxjs-476eb41e0faf

Why It’s Important to Unsubscribe from RxJS Subscription:
https://netbasal.com/why-its-important-to-unsubscribe-from-rxjs-subscription-a7a6455d6a02

Dynamic filtering with RxJs and Angular forms — A tutorial
https://blog.angulartraining.com/dynamic-filtering-with-rxjs-and-angular-forms-a-tutorial-6daa3c44076a

How to use WebSockets with RxJS and Angular?:
https://blog.angulartraining.com/how-to-use-websockets-with-rxjs-and-angular-b98e7fd8be82

State Management with Observable Store Services:
https://blog.angulartraining.com/tutorial-state-management-with-observable-store-services-5ba53d87ad94

5 RxJs-Angular pitfalls to be aware of
https://blog.angulartraining.com/5-rxjs-angular-pitfalls-to-be-aware-of-160adfd402d8

Learn to combine RxJs sequences with super intuitive interactive diagrams:
medium.com/angular-in-depth/learn-to-combine-rxjs-sequences-with-super-intuitive-interactive-diagrams-20fce8e6511

The Best Way To Unsubscribe RxJS Observables In The Angular Applications!
https://medium.com/angular-in-depth/the-best-way-to-unsubscribe-rxjs-observable-in-the-angular-applications-d8f9aa42f6a0

RxJS: How to Observe an Object:
https://medium.com/angular-in-depth/rxjs-how-to-observe-an-object-20c47cf51571

RxJS: Error Handling With forkJoin
https://medium.com/better-programming/rxjs-error-handling-with-forkjoin-3d4027df70fc

Learn Angular & RxJS: Countdown Timer:
https://medium.com/better-programming/lets-build-rxjs-countdown-in-angular-5768c8b158b8

RxJS: Avoiding takeUntil Leaks:
ncjamieson.com/avoiding-takeuntil-leaks/

Angular/RxJs When should I unsubscribe from `Subscription`:
stackoverflow.com/questions/38008334/angular-rxjs-when-should-i-unsubscribe-from-subscription/41177163#41177163

RxJS: What's Changed with shareReplay?:
medium.com/angular-in-depth/rxjs-whats-changed-with-sharereplay-65c098843e95?
ncjamieson.com/whats-changed-with-sharereplay/

RxJS: Avoiding rxjs-compat
ncjamieson.com/avoiding-rxjs-compat/

Be Careful with Array Mutators:
ncjamieson.com/be-careful-with-array-mutators/

RxJS: Calling publish with a Selector:
ncjamieson.com/calling-publish-with-a-selector/

TypeScript: Don't Export const enums:
ncjamieson.com/dont-export-const-enums/

RxJS: Avoiding Unbound Methods:
ncjamieson.com/avoiding-unbound-methods/

RxJS: Testing with Fake Time:
ncjamieson.com/testing-with-fake-time/

RxJS: How to Observe an Object:
ncjamieson.com/how-to-observe-an-object/

RxJS: Improving the Static pipe Function:
ncjamieson.com/improving-the-static-pipe-function/

RxJS: TSLint Rules for Version 6:
ncjamieson.com/tslint-rules-for-version-6/

RxJS: When to Use switchMap:
ncjamieson.com/when-to-use-switchmap/

RxJS: Avoiding switchMap-related Bugs:
ncjamieson.com/avoiding-switchmap-related-bugs/

RxJS: Understanding Expand:
ncjamieson.com/understanding-expand/

RxJS: Understanding Subjects:
ncjamieson.com/understanding-subjects/

RxJS: Closed Subjects:
ncjamieson.com/closed-subjects/

RxJS: Composing Subscriptions:
ncjamieson.com/composing-subscriptions/

How to Reduce Action Boilerplate:
ncjamieson.com/how-to-reduce-action-boilerplate/

RxJS: How to Use Type Guards with Observables:
ncjamieson.com/how-to-use-type-guards-with-observables/

RxJS: How to Use refCount:
ncjamieson.com/how-to-use-refcount/

Managing RxJS Imports with TSLint:
ncjamieson.com/managing-rxjs-imports-with-tslint/

RxJS Marble Testing: RTFM:
ncjamieson.com/marble-testing-rtfm/

Connecting Components with Reactive Forms:
ncjamieson.com/connecting-components-with-reactive-forms/

RxJS: multicast's Secret:
ncjamieson.com/multicasts-secret/

Debugging RxJS, Part 2: Logging:
ncjamieson.com/debugging-rxjs-part-2-logging/

Debugging RxJS, Part 1: Tooling:
ncjamieson.com/debugging-rxjs-part-1-tooling/

Subsink - From Ward Bell -  Allows tracking of multiple rxjs subscriptions so that they can all be unscribed in one call:
github.com/wardbell/subsink

Introduction to RxJS - The RxJS Airplane:
medium.com/razroo/introduction-to-rxjs-the-rxjs-airplane-24e932072775

RxJS Pitfalls and how to Avoid Them:
medium.com/razroo/rxjs-pitfalls-and-how-to-avoid-them-870e54bea467

RxJS in Angular: Part I:
medium.com/@Armandotrue/rxjs-in-angular-part-1c5409610d8e

Inactivity Timer Implementation in Angular And RxJS:
medium.com/@pankumar.kumar29606/inactivity-timer-implementation-in-angular-and-rxjs-c84224c3a1b0

Learn to combine RxJs sequences with super intuitive interactive diagrams:
medium.com/angular-in-depth/learn-to-combine-rxjs-sequences-with-super-intuitive-interactive-diagrams-20fce8e6511

Understanding, creating and subscribing to observables in Angular:
medium.com/@luukgruijs/understanding-creating-and-subscribing-to-observables-in-angular-426dbf0b04a3

RxJS Best Practices:
https://medium.com/angular-in-depth/rx-js-best-practices-6a3b095ffb04

Simple state management in Angular with only Services and RxJS: 
https://dev.to/avatsaev/simple-state-management-in-angular-with-only-services-and-rxjs-41p8

https://medium.com/@isopproject/subscribe-vs-async-pipe-in-angular-21bb38f3ee49

Demystifying RxJS for Angular Developers:
https://blog.bitsrc.io/demystifying-rxjs-for-angular-developers-f39e74f56f64

RxJS in-depth: Github repo ‘utils’ directory review (part 1):
https://medium.com/angular-in-depth/rxjs-in-depth-github-repo-utils-directory-review-part-1-d0aa15adaeb9


Custom Angular Pipes and Dynamic Locale:
medium.com/dailyjs/dynamic-locales-in-angular-dd9a527ebe1f

Reactive.how - Learn RxJS operators and Reactive Programming principles
https://reactive.how/

Understanding RxJS Multicast Operators:
https://netbasal.com/understanding-rxjs-multicast-operators-77b3f60af0a2

RxJs combination operators:
https://medium.com/swlh/rxjs-combination-operators-9c29270cb39b

RxJS: Managing Operator State:
ncjamieson.com/managing-operator-state/

RxJS: Combining Operators:
ncjamieson.com/combining-operators/

RxJS: Understanding Lettable Operators:
ncjamieson.com/understanding-lettable-operators/

RxJS: How to Use Lettable Operators and Promises:
ncjamieson.com/how-to-use-lettable-operators-and-promises/

RxJS: Pipelining Lettable Operators:
ncjamieson.com/pipelining-lettable-operators/

RxJS: Understanding the publish and share Operators:
ncjamieson.com/understanding-publish-and-share/

3 Ways to Debounce HTTP Requests in Angular (inclding rxjs debounce operator):
https://blog.bitsrc.io/3-ways-to-debounce-http-requests-in-angular-c407eb165ada

Core RxJS Transformation Operators:
medium.com/razroo/core-rxjs-transformation-operators-78ff6970d8a3

More Rxjs Operators:
medium.com/@hohanga/more-rxjs-operators-d2e485bc91e4

The magic of RXJS sharing operators and their differences:
itnext.io/the-magic-of-rxjs-sharing-operators-and-their-differences-3a03d699d255

Using RxJS Join Creation Operators to Combine Observer Data:
levelup.gitconnected.com/using-rxjs-join-creation-operators-to-combine-observer-data-4b02fa94e95a

Rxjs Operators — More Join Operators:
medium.com/javascript-in-plain-english/rxjs-operators-more-join-operators-61aebe60baa7

More Rxjs Transformation Operators — Scan and Window: 
https://medium.com/javascript-in-plain-english/more-rxjs-transformation-operators-scan-and-window-191a18e5c4e7

Creating Custom Operators in RxJS
netbasal.com/creating-custom-operators-in-rxjs-32f052d69457

Rxjs Operators — Utility Operators:
medium.com/javascript-in-plain-english/rxjs-operators-utility-operators-38e825959a53

Rxjs Filtering Operators — Distinctness:
medium.com/javascript-in-plain-english/rxjs-filtering-operators-distinctness-fb4c78bc1dd


RxJS Cold vs Hot Observables:
medium.com/razroo/cold-vs-hot-observables-eaa2dbb1e6b6

Angular HttpClient with RxJS Observable Example:
https://howtodoinjava.com/angular/rxjs-observable-httpclient/

Create custom Observables by wrapping existing APIs in Angular 7: 
https://medium.com/@m.litsa/create-custom-observables-by-wrapping-existing-apis-in-angular-7-fd5e5f721b49

Auto-Unsubscribing in Angular Components Like a Pro:
https://medium.com/@radekbusa/auto-unsubscribing-in-angular-components-like-a-pro-742220b01d0c

The Ultimate Answer To The Very Common Angular Question: subscribe() vs | async Pipe: 
https://medium.com/angular-in-depth/angular-question-rxjs-subscribe-vs-async-pipe-in-component-templates-c956c8c0c794

How to build Angular apps using Observable Data Services - Pitfalls to avoid:
blog.angular-university.io/how-to-build-angular2-apps-using-rxjs-observable-data-services-pitfalls-to-avoid/

How to automatically unsubscribe your RxJs observables [Tutorial]:
https://blog.angulartraining.com/how-to-automatically-unsubscribe-your-rxjs-observables-tutorial-2f98b0560298#e232

Getting to Know the Defer Observable in RxJS:
netbasal.com/getting-to-know-the-defer-observable-in-rxjs-a16f092d8c09

Let Angular Manage Your RxJS Subscriptions Better:
medium.com/better-programming/let-angular-manage-your-rxjs-subscriptions-better-9243073e94b0


Managing State Using RxJS Subjects in Angular Applications: 
https://www.telerik.com/blogs/managing-state-using-rxjs-subjects-in-angular-applications

Simple state management in Angular with only Services and RxJS: 
https://dev.to/avatsaev/simple-state-management-in-angular-with-only-services-and-rxjs-41p8

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Frameworks that are complimentary to Angular: 

Nest JS - A progressive Node.js framework for building efficient, reliable and scalable server-side applications.
https://nestjs.com/

Restify - A Node.js web service framework optimized for building semantically correct RESTful web services ready for production use at scale. restify optimizes for introspection and performance.
http://restify.com/


Ionic: 

A framwwork that allows you to build cross-platform apps using html, JavaScript and gives access to native-like funcationality on each platform via Apache Cordova.

https://ionicframework.com/

https://ionicframework.com/docs/angular/your-first-app

Ionic 4, Angular 7 Building CRUD mobile Apps:
https://www.djamware.com/post/5be52ce280aca72b942e31bc/ionic-4-angular-7-and-cordova-tutorial-build-crud-mobile-apps

Apache Cordova:
https://cordova.apache.org/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular add-ins and Libraries:

ngrx - Reactive state library for Angular, like Redux.
https://ngrx.io/

ngx-api-utils - ngx-api-utils is a lean library of utilities and helpers to quickly integrate any HTTP API (REST, Ajax, and any other) with Angular:
https://github.com/ngx-api-utils/ngx-api-utils

Angular nx - Enterprise level Angular development:
https://nx.dev/getting-started/what-is-nx

AngularFire - Angular library for Google Firebase:
https://github.com/angular/angularfire2

Moment.js - Parse, validate, manipulate, and display dates and times in JavaScript.
https://momentjs.com/

Zone.JS - Implements Zones for JavaScript.  A Zone is an execution context that persists across async tasks. You can think of it as thread-local storage for JavaScript VMs.
https://github.com/angular/angular/tree/master/packages/zone.js

What the hell is Zone.js and why is it in my Angular 2?:
https://medium.com/@MertzAlertz/what-the-hell-is-zone-js-and-why-is-it-in-my-angular-2-6ff28bcf943e

ng-bootstrap - Angular powered Bootstrap 

https://ng-bootstrap.github.io

https://github.com/ng-bootstrap/ng-bootstrap

ng-bootstrap widgets:
https://ng-bootstrap.github.io/#/components/alert/examples

ng-bootstrap Supported Browsers:
Chrome (45+)
Firefox (40+)
IE (10+)
Edge (20+)
Safari (7+)

ng-bootstrap Installation:
https://github.com/ng-bootstrap/ng-bootstrap#installation

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Apollo client to mak eGraphQL work with Angular: 

https://www.apollographql.com/docs/angular/

Apollo Client For Angular — Making Use of GraphQL: 
https://medium.com/codingthesmartway-com-blog/apollo-client-for-angular-making-use-of-graphql-8d9a571e020c

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular Documentation Tools: 

Codelyzer - Static analysis for Angular projects:
https://github.com/mgechev/codelyzer

Compodoc - Documentation generator for Angular projects:
https://github.com/compodoc/compodoc
Angular 8 support with Compodoc see: https://github.com/compodoc/compodoc/issues/831

Compodoc: The Ultimate Angular Documentation:
medium.com/razroo/compodoc-the-ultimate-angular-documentation-razroo-verified-f1bb1dfaf542

ngrev - Reverse engineers an Angular project and presents component diagrams
among other documentation:
https://github.com/mgechev/ngrev

https://github.com/Riron/effects-mapper

Hads - Hey, it's another documentation server:
https://github.com/sinedied/hads

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular Books and Training:

Angular University:
https://angular-university.io/

Rangle’s Angular 2+ Training Book (online):
https://angular-2-training-book.rangle.io/

ng-conf videos from past ng-confs:
https://www.youtube.com/user/ngconfvideos/videos

Brad Traversy's Angular 2019 Quick Class from YouTube (To-Do List):
https://github.com/bradtraversy/angular-crash-todolist

Best course on Udemy for Angular.  Maxamillion keeps this updated as new versions of Angular are released.
https://www.udemy.com/course/the-complete-guide-to-angular-2/

Free 33-part course by Dan Wahlin:
https://medium.com/free-code-camp/want-to-learn-angular-heres-our-free-33-part-course-by-dan-wahlin-fc2ff27ab451

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular starter projects that you can build new app off of: 

Angular and TypeScript JumpStart example application:
https://github.com/DanWahlin/Angular-JumpStart

Angular real-world example app (Angular 7.2.4):
http://github.com/gothinkster/angular-realworld-example-app

Angular 8 Example App + Angular CLI + Angular Universal + i18n + Firebase https://angularexampleapp.com (blocked):
http://github.com/Ismaestro/angular8-example-app

Full stack starter kit featuring Angular 7, Spring boot and stateless JWT authentication. https://angular-spring-starter.fanjin.io
https://github.com/bfwg/angular-spring-starter

Angular Seed - Provides fast, reliable and extensible starter for the development of Angular projects.  AOT compilation and Docker support. 
https://mgechev.github.io/angular-seed/

SB Admin 2.0 project with Angular 2 and ng2-bootstrap 
https://github.com/AngularShowcase/ng2-bootstrap-sbadmin
http://angularshowcase.github.io/ng2-bootstrap-sbadmin/

Angular 8 + Material Design Starter:
https://onthecode.co.uk/angular-material-starter-template-for-your-next-project/

Angular 8 + Material Design Starter (from onthecode blog):
https://github.com/umutesen/angular-material-template

ngx-Rocket:
https://github.com/ngx-rocket/generator-ngx-rocket

ngx-rocket - Available task commands when generated with Web, Desktop (Electron) and Ionic (Mobile) support: 

 $ npm start: start dev server with live reload on http://localhost:4200     
 $ npm run build: build web app for production                               
 $ npm run cordova:prepare: prepare for building mobile app                  
 $ npm run cordova:run: run app on device or simulator                       
 $ npm run cordova:build: build mobile app for production                    
 $ npm run electron:build: build app for electron                            
 $ npm run electron:run: run app in electron                                 
 $ npm run electron:package: package executables for all selected platforms  
 $ npm test: run unit tests in watch mode for TDD                            
 $ npm run test:ci: lint code and run units tests with coverage              
 $ npm run e2e: launch e2e tests                                             
 $ npm run docs: show docs and coding guides                                 
 $ npm run compodoc: generates docs from code                                
 $ npm run prettier: format your code automatically                          

Angular NgRX Material Starter:
https://tomastrajan.github.io/angular-ngrx-material-starter#/about

Use Angular Proxy To Easily Call External APIs
https://medium.com/ngconf/use-proxy-to-easily-call-your-apis-during-development-2b30849939b7

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular runtime configuration: 

Official docs on workspace config:

https://angular.io/guide/workspace-config

NPM module for dealing with runtime configuration(s):

Angular Runtime Configuration Loader:
https://www.npmjs.com/package/runtime-config-loader

https://github.com/pjlamb12/runtime-config-loader

https://stackblitz.com/edit/runtime-config-loader-demo

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular Releases: 

Angular differences between each major 2+ - 8 release:
https://medium.com/@lifenshades/difference-among-angular-8-7-6-5-4-3-2-breakdown-new-features-and-changes-811fb5f8e6f0

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular Patterns and Best Practices: 

Angular Architecural Patterns:
https://angular-academy.com/angular-architecture-best-practices/

Angular architecture patterns – High level project architecture:
https://netmedia.io/dev/angular-architecture-patterns-high-level-project-architecture_5589

Angular Best Practices:
https://codeburst.io/angular-best-practices-4bed7ae1d0b7

Angular Architecture - Container vs Presentational Components Common Design Pitfalls:
https://blog.angular-university.io/angular-component-design-how-to-avoid-custom-event-bubbling-and-extraneous-properties-in-the-local-component-tree/

Create Modular Components with Angular Structural Directives:
https://netbasal.com/create-modular-components-with-angular-structural-directives-1a5198d9ab7d

Best practices for a clean and performant Angular application:
https://www.freecodecamp.org/news/best-practices-for-a-clean-and-performant-angular-application-288e7b39eb6f/

Creating Reusable Angular Components – How To Avoid the Painful Trap Most Go In:
https://christianlydemann.com/creating-reusable-angular-components-how-to-avoid-the-painful-trap-most-go-in/

Angular patterns 3: flexible and scalable design of complex pages
https://itnext.io/angular-patterns-3-flexible-and-scalable-design-of-complex-pages-c35f327ac50

Angular Enterprise Patterns - Part 1
https://www.cleverti.com/blog/angular-enterprise-patterns-pt1

Enterprise-Angular-Applications-With-NgRx-and-Nx-Book
https://github.com/duncanhunter/Enterprise-Angular-Applications-With-NgRx-and-Nx-Book

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular Generators: 

Celerio - Generate Spring Boot back end and Angular 5+ front end for CRUD app:
https://github.com/jaxio/celerio-angular-quickstart

Jhipster - Generates an Angular 7 front end with JWT authentication, Spring Boot back end ans support for multiple database. Includes user and group management and CRUD operations:
https://www.jhipster.tech/

generator-ngx-rocket - Extensible Angular 7+ enterprise-grade front end project generator. Uses a backend proxy but does not generate a backend:
https://github.com/ngx-rocket/generator-ngx-rocket

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular Blogs: 

Angular Blog - News and tips from the Angular team:
https://blog.angular.io/

Angular University Blog:
https://blog.angular-university.io/

AG-Grid Blog - Topics on AG-Grid and Angular development:
https://blog.ag-grid.com

Angular in Depth:
https://blog.angularindepth.com

Todd Motto - Articles on Angular, TypeScripts:
https://toddmotto.com/

Alligator.io - Angular 2+, vue.js, React, JavaScript, CSS topics:
https://alligator.io/

Angular articles:
netbasal.com/

Nrwl Blog:
https://blog.nrwl.io/

Thoughtram Blog:
https://blog.thoughtram.io/categories/angular/

Minko Gechev Blog (Now a Google employee on the Angular team):
https://blog.mgechev.com/

Top 10 Angular Tutorials, Blogs and Podcasts
https://blog.angular-university.io/top-10-angular-2-tutorials-blogs-and-podcasts/

Includes an Angular 8 + Material starter project:
https://onthecode.co.uk/

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

General Angular resources and knowledge: 

Angular home:
https://angular.io/

Official Angular Documentation:
https://angular.io/docs

Angular CLI (Command Line Interface):
https://cli.angular.io/

Angular Versions and Release Cycle:
https://angular.io/guide/releases

Angular update guide:
https://update.angular.io/

Angular Universal - Server-side rendering:
https://angular.io/guide/universal


Tour of Heroes (Angular Tutorial):
https://angular.io/tutorial

Angular Resources Page:
https://angular.io/resources

Stackblitz - Lets you work on an entire Angular project online in a contained environment based on VSCode editor. 
https://stackblitz.com/

UpgradingAngularjs.com - Advice and training on upgrading Angular JS apps to Angular.  Run by Sam Julien.
https://www.upgradingangularjs.com/  (Blocked at Penske)

Orielly Safari Angular Playlist:
https://learning.oreilly.com/playlists/08d58257-a01a-45b6-bd13-9108dd630735

The Awesome Angular list on GitHub:
https://github.com/PatrickJS/awesome-angular

TypoeScript compiler options:
https://www.typescriptlang.org/docs/handbook/compiler-options.html

Installing Angular to latest current version:
install -g @angular/cli@latest

The preview information for the next upcoming release:
https://next.angular.io/

Getting started app (New):
https://next.angular.io/start

Releases (LTS and otherwise) explained:
https://angular.io/guide/releases


The future of Angular (9+) with Ivy:
https://dev.to/mquanit/the-future-of-angular-with-ivy-17d

The top benefites of using Angular for your project:
https://medium.com/free-code-camp/the-top-benefits-of-using-angular-for-your-project-ad54090df85c

Why I chose Angular for 2020:
https://medium.com/better-programming/why-i-chose-angular-going-into-2020-7fa08c67099c

Angular articles (stays current):
https://www.techiediaries.com/

Componizer: Easily refactor your Angular components:
medium.com/angular-in-depth/componizer-easily-refactor-your-angular-components-a9001d6f677c

Angular deploy to GitHub Pages:
medium.com/javascript-in-plain-english/angular-7-deploy-to-github-pages-images-assets-7704f3b2005c


9 Ideas For Angular That Are Often Overlooked by Developers
https://medium.com/better-programming/9-major-ideas-for-angular-that-are-often-overlooked-by-developers-272a553335a7

Code for "Angular in 60 minutes" Brad Traversy video:
https://github.com/bradtraversy/a4app

Spring Boot + MyBatis + MySQL Example
https://javaguides.net/2019/08/spring-boot-mybatis-mysql-example.html

Spring Boot + Angular 8 CRUD Example Tutorial:
https://javaguides.net/2019/06/spring-boot-angular-7-crud-example-tutorial.html

Spring Boot + Angular 8 CRUD, Part 1 - Develop Spring Boot CRUD Rest APIs 
https://javaguides.net/2019/06/spring-boot-angular-8-crud-part-1-develop-springboot-crud-rest-apis.html

Spring Boot + Angular 8 CRUD, Part 2 - Create Angular 8 App 
https://javaguides.net/2019/06/spring-boot-angular-8-crud-part-2-create-angular-8-app.html

Spring Boot + Angular 8 CRUD, Part 3 - Develop Angular 8 CRUD Operations 
https://javaguides.net/2019/06/spring-boot-angular-8-crud-part-3-develop-angular-8-crud-operations.html

Spring Boot  + Angular 8 CRUD, Part 4 - Angular 8 CRUD App Configuration 
https://javaguides.net/2019/06/spring-boot-angular-8-crud-part-4-angular8-crud-app-configuration.html

Spring Boot 2 + Angular 8 CRUD, Part 5 - Running Angular 8 CRUD App 
https://javaguides.net/2019/06/spring-boot-angular-8-crud-part-5-running-angular-8-crud-app.html

Angular 9/8 Tutorial: Build a Web App with HttpClient and RxJS:
https://itnext.io/angular-9-8-tutorial-build-a-web-app-with-httpclient-and-rxjs-d76a262297b

Getting Started with Angular 8 (Tutorial):
https://onthecode.co.uk/getting-started-with-angular-8/

10 Trickls to optimize your Angular app:
https://blog.bitsrc.io/10-tricks-to-optimize-your-angular-app-44208f616bf0

10 Useful Angular Features You’ve Probably Never Used
https://blog.bitsrc.io/10-useful-angular-features-youve-probably-never-used-e9e33f5c35a7

3 Steps to Creating Dynamic Views in Angular - Dynamically loading components without directives:
https://medium.com/better-programming/3-steps-to-creating-dynamic-views-in-angular-9df80e3e3d6b

Angular 8 Tutorial By Example: (REST API, HttpClient GET, Components, Services & ngFor):
https://www.techiediaries.com/angular-tutorial-example-rest-api-httpclient-get-ngfor/

Auth0 Blog Series:
Real-World Angular Series - Part 1: MEAN Setup & Angular Architecture
https://auth0.com/blog/real-world-angular-series-part-1/

Real-World Angular Series - Part 2: Authentication and Data Modeling:
https://auth0.com/blog/real-world-angular-series-part-2/

Real-World Angular Series - Part 3: Fetching and Displaying API Data:
https://auth0.com/blog/real-world-angular-series-part-3/

Real-World Angular Series - Part 4: Access Management, Admin, and Detail Pages:
https://auth0.com/blog/real-world-angular-series-part-4/

Real-World Angular Series - Part 5: Animation and Template-Driven Forms
https://auth0.com/blog/real-world-angular-series-part-5

Real-World Angular Series - Part 6: Reactive Forms and Custom Validation
https://auth0.com/blog/real-world-angular-series-part-6

Real-World Angular Series - Part 7: Relational Data and Token Renewal:
https://auth0.com/blog/real-world-angular-series-part-7/

Real-World Angular Series - Part 8: Lazy Loading, Production Deployment, SSL:
https://auth0.com/blog/real-world-angular-series-part-8/

Angular 7 Series Part 1: Creating Enterprise-Level Applications
https://medium.com/better-programming/angular-7-series-part-1-create-enterprise-level-application-36c84786fa27

Angular 7 Series Part-2: Creating a Custom Library:
https://medium.com/better-programming/angular-7-series-part-2-create-custom-library-8d7a0494b2cc

Angular 8 Series Part 3: Upgrade to Angular 8:
https://medium.com/better-programming/angular-8-series-part-3-upgrade-to-angular-8-c08745131cb6

Angular 8 Series Part 4: Add Angular Material
https://medium.com/better-programming/angular-8-series-part-4-add-angular-material-6501e91041d8

Package.json dependencies in depth: 
https://medium.com/better-programming/package-jsons-dependencies-in-depth-a1f0637a3129

Angular vs Angular JS (2019 comparison from Google):
https://www.techaheadcorp.com/blog/angular-vs-angularjs/

Angular vs AngularJS – A Complete Comparison Guide from 2019 by Google

https://github.com/mgechev/angular-performance-checklist

Controlling Data Streams in Angular - Toggling between a work mode and a view mode in large-scale Angular apps: 
https://medium.com/better-programming/controlling-data-streams-in-angular-3e43484bedb3


All you need to know about Angular parameters:
levelup.gitconnected.com/all-you-need-to-know-about-angular-parameters-309828b30826

Different Types of Data Binding in Angular 8.0:
medium.com/@venkateshece1105/different-types-of-data-binding-in-angular-8-0-f84c17ca7eb0

What Is ContentChildren in Angular:
medium.com/better-programming/understanding-contentchildren-with-an-example-e76ce78968db

Set Up an Angular 8 Project with Material and NGXS:
levelup.gitconnected.com/setup-angular-8-project-with-material-and-ngxs-9589f51b6927

Angular: Handling Unsaved Changes with a Pop-up Dialog:
medium.com/wizdm-genesys/angular-handling-unsaved-changes-with-a-pop-up-dialog-8127b9f2d79

Angular: Redirecting To External Links:
medium.com/wizdm-genesys/angular-redirecting-to-external-links-bd3e785325c6

What's New In DevTools (Chrome 79) - Cookie handling tools:
medium.com/faun/whats-new-in-devtools-chrome-79-1b2df6cdd759

Developer Tools to Increase Your Productivity:
medium.com/better-programming/developer-tools-to-increase-your-productivity-6f4ec0c96dd9

The Angular Library Series - Creating a Library with Angular CLI:
medium.com/angular-in-depth/creating-a-library-in-angular-6-87799552e7e5

The Angular Library Series - Building and Packaging
medium.com/angular-in-depth/creating-a-library-in-angular-6-part-2-6e2bc1e14121

All you need to know about Ivy, The new Angular engine:
medium.com/angular-in-depth/all-you-need-to-know-about-ivy-the-new-angular-engine-9cde471f42cf

Client-Side Caching with TypeScript and Breeze:
https://visualstudiomagazine.com/articles/2013/12/01/managing-client-side-objects-using-typescript.aspx

Angular Aliases for Import Statements:
https://medium.com/techmonks/angular-aliases-for-import-statements-techmonks-5af0634a09e0

Automate your team’s boilerplates by building your own schematics:
https://medium.com/swlh/automate-your-teams-boilerplates-by-building-your-own-schematics-640949001d46

19 Things You Need to Learn to Become an Effective Angular Developer:
https://medium.com/@PurpleGreenLemon/19-things-you-need-to-learn-to-become-an-effective-angular-developer-c0ccfa51222a

12 Things to Help Large Organizations Do Angular Right:
https://blog.nrwl.io/12-things-to-help-large-organizations-do-angular-right-f261a798ad6b

Angular: Load External JavaScript File Dynamically:
https://medium.com/better-programming/angular-load-external-javascript-file-dynamically-3d14dde815cb

How to run Angular in production today (June 2017):
https://blog.angular-university.io/how-to-run-angular-2-in-production-today/

Angular For Beginners Guide: Why Angular? Understanding The Top Benefits:
https://blog.angular-university.io/why-angular-angular-vs-jquery-a-beginner-friendly-explanation-on-the-advantages-of-angular-and-mvc/

Packaging your Spring Boot and Angular 2+ projects together
https://levelup.gitconnected.com/packaging-your-spring-boot-and-angular-2-projects-together-a13a9c5efdb7

# Angular Resources

Oasis Digital - Angular Boot Camp
https://angularbootcamp.com/

Oasis Digital - Angular Blog Posts
https://blog.oasisdigital.com/category/angularjs/

Oasis Digital - Presentations
https://www.youtube.com/user/OasisDigitalSoftware

Oasis Digital - Class Example Repositories
https://bitbucket.org/od-training

Angular Style Guide
https://angular.io/styleguide

AngularJS to Angular Quick Reference
https://angular.io/guide/ajs-quick-reference

Angular CLI
https://cli.angular.io/

Augury
https://augury.angular.io/

Angular Resources
https://angular.io/resources/

5 Rookie Mistakes to Avoid with Angular 2
http://angularjs.blogspot.com/2016/04/5-rookie-mistakes-to-avoid-with-angular.html

Component Interaction - Share information between different directives and components
https://angular.io/guide/component-interaction

Managing State in Angular Applications - Victor Savkin
https://blog.nrwl.io/managing-state-in-angular-applications-22b75ef5625f

Change Detection in Angular 2 - Victor Savkin
https://vsavkin.com/change-detection-in-angular-2-4f216b855d4c#.3d3r1vlvl

Angular Performance Playground - Paul Spears
https://github.com/dpsthree/angular-performance-playground

Angular Testing Guide - Gerard Sans
https://medium.com/google-developer-experts/angular-2-testing-guide-a485b6cb1ef0#.na0gwtswi

Introduction to E2E Testing with the Angular CLI and Protractor - Cory Rylan
https://coryrylan.com/blog/introduction-to-e2e-testing-with-the-angular-cli-and-protractor

Controlling Time with Zone.js and FakeAsync - Victor Savkin
https://blog.nrwl.io/controlling-time-with-zone-js-and-fakeasync-f0002dfbf48c

Testing Angular 2 - Julie Ralph
https://www.youtube.com/watch?v=f493Xf0F2yU
https://github.com/juliemr/angularconnect-2016

Testing Angular Templates
https://angular.io/guide/testing#component-inside-a-test-host

Testing for Accessibility in Angular 1 and 2 - Marcy Sutton
https://www.youtube.com/watch?v=9y2MnXo45cs
http://marcysutton.github.io/a11y-testing-with-angular/#/

Angular 2 Forms - Kara Erickson
https://www.youtube.com/watch?v=xYv9lsrV0s4

Angular Dynamic Forms
https://angular.io/guide/dynamic-form

Angular 2 Router - Victor Savkin
https://vsavkin.com/angular-2-router-d9e30599f9ea#.66cdod4ti

Angular Router (eBook - Victor Savkin
https://leanpub.com/router

Essential Angular (eBook - Victor Savkin and Jeff Cross
https://leanpub.com/essential_angular

Introducing Angular Modules - John Papa
https://johnpapa.net/introducing-angular-modules-root-module/

Angular Internationalization (i18n)
https://angular.io/guide/i18n

Angular Material
https://material.angular.io/

TypeScript
https://www.typescriptlang.org/

TypeScript Playground
https://www.typescriptlang.org/play/index.html

TSLint - A Linter for the TypeScript language
http://palantir.github.io/tslint/

Typescript and ES6 and ES5 - John Papa
https://johnpapa.net/es5-es2015-typescript/

Angular 2: Change Detection - Victor Savkin
https://vsavkin.com/change-detection-in-angular-2-4f216b855d4c

Angular 2: Why TypeScript? - Victor Savkin
https://vsavkin.com/writing-angular-2-in-typescript-1fa77c78d8e8#.pd2sq4xmh

RxJS Overview
http://reactivex.io/rxjs/manual/overview.html

RxJS 5 Thinking Reactively - Ben Lesh
https://youtu.be/3LKMwkuK0ZE

RxJS Operators by Categories
https://github.com/Reactive-Extensions/RxJS/blob/master/doc/gettingstarted/categories.md

RxJS - Which operator do I use?
https://xgrommx.github.io/rx-book/content/which_operator_do_i_use/index.html

RxMarbles: Interactive diagrams of Rx Observables
http://rxmarbles.com/

Learning Observable By Building Observable - Ben Lesh
https://medium.com/@benlesh/learning-observable-by-building-observable-d5da57405d87#.upfv3na4p

Functional Reactive Programming for Angular 2 Developers
http://blog.angular-university.io/functional-reactive-programming-for-angular-2-developers-rxjs-and-observables/

@ngrx/platform - Reactive libraries for Angular, including @ngrx/store
https://github.com/ngrx/platform

@ngrx example application showcasing the ngrx platform
https://github.com/ngrx/platform/blob/master/example-app/README.md

@ngrx/effects - effects-mapper
https://github.com/Riron/effects-mapper

Cross Site Request Funkery: Securing Your Angular Apps From Evil Doers - Dave Smith
https://www.youtube.com/watch?v=9inczw6qtpY

What the heck is the event loop anyway? - Philip Roberts
https://www.youtube.com/watch?v=8aGhZQkoFbQ

Yarn
https://yarnpkg.com

JetBrains WebStorm JavaScript IDE
https://www.jetbrains.com/webstorm/

Microsoft Visual Studio Code Editor
https://code.visualstudio.com/

6 Essential VSCode Extensions for Angular Developers - Mosh Hamedani
https://programmingwithmosh.com/angular/essential-vscode-extensions-for-angular-developers/

Angular Air (Videocast and Podcast
https://angularair.com/

Adventures in Angular (Podcast
https://devchat.tv/adv-in-angular

ng-newsletter (weekly Angular email
https://www.ng-newsletter.com/

Angular Top 5 (weekly Angular email
http://angulartop5.com/

Upgrading AngularJS - comprehensive online step-by-step course for migrating from AngularJS to Angular
https://www.upgradingangularjs.com/

Effective Angular Patterns:
https://itnext.io/angular-effective-component-patterns-f5f7f08e2072

Angular 7 with AG-Grid CRUD Operations:
http://www.myjavablog.com/2019/04/19/angular-7-ag-grid-crud-operations/

6 common misconception about Angular:
https://dev.to/mappmechanic/6-common-misconceptions-about-angular-4nbc

Made With Angular:
https://www.madewithangular.com/

Angular Workspace: No Application for You! - The how and why of using the --create-application flag with Angular CLI to create a Workspace without the initial application:
https://medium.com/angular-in-depth/angular-workspace-no-application-for-you-4b451afcc2ba

Don’t be afraid and just `ng update`! (About the Angular release train):
https://itnext.io/dont-be-afraid-and-just-ng-update-1ad096147640

Reading local JSON files in Angular (different versions):
https://www.angularjswiki.com/angular/how-to-read-local-json-files-in-angular/


============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular architecture topics:

Angular architecture best practices:
https://angular-academy.com/angular-architecture-best-practices/

Angular folder structure:
https://medium.com/@motcowley/angular-folder-structure-d1809be95542

Folder by type versus folder by feature folder layouts for Angular projects:
https://medium.com/@CKGrafico/taking-decisions-to-structure-big-projects-with-hooks-stores-services-and-more-a703c7874480

Angular 8 - Understanding Directory Structure & Creating CRUD App:
https://overflowjs.com/posts/Angular-8-Understanding-Directory-Structure-and-Creating-CRUD-App

Angular Architecture:
https://medium.com/techmonks/angular-architecture-a80e94e92c23

Angular Modules:
https://medium.com/techmonks/angular-modules-1ddcc7b5bf1

Angular Core Concepts:
https://medium.com/techmonks/angular-core-concepts-list-c337e3e84f5f

What Does Modular Architecture in Angular Even Mean?:
https://medium.com/better-programming/what-does-modular-architecture-in-angular-even-mean-e2fa986aa007?

The Ultimate Guide to Implementing Feature Flags in Angular Applications:
https://netbasal.com/the-ultimate-guide-to-implementing-feature-flags-in-angular-applications-d4ae1fd33684

Anatomy of a large Angular application:
https://medium.com/@bojzi/anatomy-of-a-large-angular-application-f098e5e36994

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

Angular miscellaney: 

A series of Angular resources I've accumulated over the last year or so.  Hopefully there are some links that you find helpful.  Feel free to pass the list to anyone you think would benefit from it.  


Spring Pet Clinic example app.  Demonstrates CRUD operations on SQL tables with separate front end and back end projects:

Back end for the Spring Pet-Clinic example, written in Java 8, uses Spring Boot.  Provides a REST Api via Spring Data REST to the Angular front end. 
https://github.com/spring-petclinic/spring-petclinic-rest

Angular front end for the Spring Pet-Clinic example:
https://github.com/spring-petclinic/spring-petclinic-angular


Spring Boot 2.0.2 back end for the Real-World Angular example app above (uses CORS, JWT authentication etc):
https://github.com/gothinkster/spring-boot-realworld-example-app

Real-world Angular example app. Includes JWT authentication, CRUD operations, etc:
https://github.com/gothinkster/angular-realworld-example-app

Jhipster - Generates an Angular 7 front end with JWT authentication, Spring Boot back end and support for multiple database. Includes user and group management and CRUD operations on entities you define using the JDL Studio tool (https://start.jhipster.tech/jdl-studio/).  Also, search on YouTube (from home) for "JHipster" to see a demo of how it works and how a Jhipster project is generated:
https://www.jhipster.tech/

Compodoc - Documentation generator for Angular projects:
https://compodoc.app/


Angular Developer Tools:
================================
Visual Studio Code - IDE perfectly suited for Angular development:
https://code.visualstudio.com/
https://vscodecandothat.com/

StackBlitz - Online Angular development environment:
https://stackblitz.com/edit/angular

Augury - Browser plugin for Angular in developers tools console:
https://augury.rangle.io/

Angular Console - The power of the Angular CLI. The convenience of an APP:
https://angularconsole.com/

Angular Components:
===========================
Angular Material - Material design components for Angular:
https://material.angular.io/

PrimeNg:
https://www.primefaces.org/primeng/#/

Ag-Grid - Advanced grid component with a community licensed version:
https://www.ag-grid.com/best-angular-2-data-grid/

ngx-bootstrap - Bootstrap components for Angular:
https://valor-software.com/ngx-bootstrap/#/

Nebular - Angular 8 Components, Auth and Security https://akveo.github.io/nebular
https://github.com/akveo/nebular


Angular Books and Training:
==============================
Angular University:
https://angular-university.io/

Rangle's Angular 2+ Training Book (online):
https://angular-2-training-book.rangle.io/

ng-conf videos from past ng-confs:
https://www.youtube.com/user/ngconfvideos/videos


Angular blogs:
-==================
Angular Blog - News and tips from the Angular team:
https://blog.angular.io/

Angular University Blog:
https://blog.angular-university.io/

AG-Grid Blog - Topics on AG-Grid and Angular development:
https://blog.ag-grid.com

Todd Motto - Articles on Angular, TypeScripts:
https://toddmotto.com/

Alligator.io - Angular 2+, vue.js, React, JavaScript, CSS topics:
https://alligator.io/

Angular Testing:
===================
Protractor - End to end testing for Angular projects:
https://protractor.angular.io/

UI-jar - A drop in module to automatically create a living style guide based on the test you write for your components:
https://github.com/ui-jar/ui-jar

Jest - JavaScript Testing Framework with a focus on simplicity.
https://jestjs.io/

Sinon.js - Standalone test spies, stubs and mocks for JavaScript. Works with any unit testing framework.
https://sinonjs.org/

Angular Tips and Best Practices:
=====================================
Angular Performance Checklist:
https://github.com/mgechev/angular-performance-checklist

How to optimize Angular applications:
https://itnext.io/how-to-optimize-angular-applications-99bfab0f0b7c

Intersection Observer API:
https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API

A modern solution to lazy loading images using Intersection Observer
https://blog.angularindepth.com/a-modern-solution-to-lazy-loading-usingintersection-observer-9280c149bbc

Clean code checklist in Angular:
https://itnext.io/clean-code-checklist-in-angular-%EF%B8%8F-10d4db877f74

How to define a highly scalable folder structure for your Angular project:
https://itnext.io/choosing-a-highly-scalable-folder-structure-in-angulard987de65ec7

The above makes more sense when you see it laid out in a GitHub repo:
https://github.com/mathisGarberg/angular-folder-structure

Authentication with JSON Web Tokens (JWT).  The Complete Guide:
https://blog.angular-university.io/angular-jwt-authentication/

Getting started with the App Shell using Angular 7:
https://techshard.com/2019/05/12/getting-started-with-app-shell-using-angular-7/

Push-based architectures with RxJs (Thomas Burleson):
https://medium.com/@thomasburlesonIA/push-based-architectures-with-rxjs-81b327d7c32d
https://www.youtube.com/watch%3Fv%3DHnNytR32Otk&rct=j&frm=1&q=&esrc=s&sa=U&ved=0ahUKEwjZq9TJ6M_iAhXum-AKHQl6D-0QtwIIJzAD&usg=AOvVaw2DFgUC25TXlCDqqCvAus00

Additional Angular articles from Thomas Burleson:
https://medium.com/@thomasburlesonIA


Angular related podcasts:
==================================
Angular Air (Videocast and Podcast)
https://angularair.com/

Adventures in Angular (Podcast)
https://devchat.tv/adv-in-angular

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

VS Code (Visual Studio Code): 
https://github.com/viatsko/awesome-vscode

VS Code Shortcuts for code newbies [mac/windows][
https://dev.to/iraamoni/vs-code-shortcuts-for-code-newbies-mac-windows-gif-h6c

Productivity and tracking extensions for Visual Studio Code 
https://dev.to/lampewebdev/productivity-and-tracking-extensions-for-visual-studio-code-1h84

13 Must-Have Browser Extensions for Web Developers: 
https://medium.com/better-programming/13-must-have-browser-extensions-for-web-developers-7f4f3b1c623d

Shortcuts in VSCode:
https://link.medium.com/8Cl3Um0iN1

Additional Tips and Extensions:
https://viatsko.github.io/awesome-vscode/

Setting up Windows Cmder to be your default VSCode integrated terminal/shell:
https://medium.com/@qjli/how-to-setup-custom-terminal-in-visual-studio-code-e0a4be28130e

15 VS Code Extensions to Save Your Time and Make You a Better Developer
https://levelup.gitconnected.com/15-vs-code-extension-to-save-your-time-and-make-you-a-better-developer-506f79baec53

Set Up Remote Development With VS Code in Your Browser:
https://medium.com/better-programming/set-up-remote-development-with-vs-code-in-your-browser-4b5750d3d141

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

VS Code Extensions: 

Also see:
https://viatsko.github.io/awesome-vscode

Interface Generator - creates an interface definition from a typescript class. Supports import statements, comments, public properties and methods, generics and optional:
https://marketplace.visualstudio.com/items?itemName=dotup.dotup-vscode-interface-generator


Filter Lines - Filter in/out lines in the currently open file by either Regex or String matching.
https://marketplace.visualstudio.com/items?itemName=earshinov.filter-lines

Bookmarks - Set and jump to bookmarks in the code:
https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks

REST Client:
https://marketplace.visualstudio.com/items?itemName=humao.rest-client

Language support for Java by Red Hat:
https://marketplace.visualstudio.com/items?itemName=redhat.java

Debugger for Java:
https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug

Maven for Java:
https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-maven

Lombok - Adds support for Lombok annotations within VSCode. 
https://marketplace.visualstudio.com/items?itemName=GabrielBB.vscode-lombok

Gi - Generate .gitignore lines easily
https://marketplace.visualstudio.com/items?itemName=rubbersheep.gi 

Git History:
https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory

Git Lens:
https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens

Paste JSON as Code - Paste JSON text and generate a model class for it in several languages including TypeScript, Java, Python, Go, Ruby, C#, Swift, Rust, Kotlin, C++, Flow, Objective-C, JavaScript, Elm, and JSON Schema:
https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype

Path IntelliSense - Autocomplete filenames:
https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense

Auto Close Tag - Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text
https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag

Sort Lines - Sorts lines in the selected text:
https://marketplace.visualstudio.com/items?itemName=Tyriar.sort-lines

Surround - A simple yet powerful extension to add wrapper templates around your code blocks.  Great for generating try/catch blocks around lines of code like in Eclipse or IntelliJ:
https://marketplace.visualstudio.com/items?itemName=yatki.vscode-surround

Browser Preview - Launch a browser (Chrome, IE, etc) in a new window with your current VSCode window's code running in it:
https://marketplace.visualstudio.com/items?itemName=auchenberg.vscode-browser-preview

Live Share Extension Pack:
https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack

Live Share Whiteboard - Live Share Whiteboard enhances the existing Visual Studio Live Share experience, by enabling you to open an integrated whiteboard, without needing to use a seperate tool or service. All participants within a Live Share session can collaboratively draw on the whiteboard, and see each others changes in real-time. For certain use cases (e.g. technical interviews, mentoring/classrooms), this can provide a useful means of communication, in addition to an audio call and co-editing and debugging.
https://marketplace.visualstudio.com/items?itemName=lostintangent.vsls-whiteboard

Angular Follow Selector - Enables clicking on Angular selectors in your HTML files and being redirected to their component definition, as well as the other way around by clicking on templateUrl and styleUrls in your component.
https://marketplace.visualstudio.com/items?itemName=sanderledegen.angular-follow-selector

json2ts - Convert a JSON from clipboard to TypeScript interfaces.
https://marketplace.visualstudio.com/items?itemName=GregorBiswanger.json2ts

Angular Snippets From John Pappa (Version 8):
https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2

Jira and Bitbucket - Bringing the power of Jira and Bitbucket to VS Code - With Atlassian for VS Code you can create and view issues, start work on issues, create pull requests, do code reviews, start builds, get build statuses and more:
https://marketplace.visualstudio.com/items?itemName=Atlassian.atlascode

Break from Comma - Adds line breaks after commas in a highlighted block text:
https://marketplace.visualstudio.com/items?itemName=jzarzoso.break-from-comma

import-cost - VS Code extension that shows import sizes of each import:
https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

VS Code from the command line: 

#Run VSCode from command line
code

#Get help
code --help

#Open VSCode in a new window instead of re-using an existing one
code -n

#Force VSCode to open using the last known open window
code -r

#Get VSCode version
code --version

#Show all the extensions currently loaded in VSCode
code --list-extensions

#Show all the extensions currently loaded in VSCode and show their versions
code --list-extensions --show-versions

#VSCode opens file example.txt and positions to line # 55, character 30
code example.txt:55:30

#VSCode disable all extensions
code --disable-extensions

#Print process usage and diagnostics information.
-s, --status	

-p, --performance	Start with the Developer: Startup Performance command enabled.

--disable-gpu	Disable GPU hardware acceleration.

--verbose	Print verbose output (implies --wait).

--prof-startup	Run CPU profiler during startup.

--upload-logs	Uploads logs from current session to a secure endpoint.


proxy setting:
--proxy-server=web-proxy.penske.com:80

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

TypeScript: 

Installing TypeScript compiler

Upgrading TypeScript Compiler to the latest version:
npm install -g typescript@latest

Compiling TypeScript to JavaScript & Visual Studio Code tools for TypeScript:
https://code.visualstudio.com/docs/typescript/typescript-compiling

https://typescriptlang.org/play/index.html

Get the latest TypeScript version globally:
npm install -g typescript

Compile TypeScript to JavaScript from the command line:
tsc helloworld.ts

TypeScript Documentation:
https://typescriptlang.org/docs/home.html

TypeScript 11 tips and tricks:
https://medium.com/@tomsu/typescript-tips-tricks-c8fdef998d50

Advanced TypeScript Types with Examples:
https://levelup.gitconnected.com/advanced-typescript-types-with-examples-1d144e4eda9e

Introduction to TypeScript Functions:
https://medium.com/@hohanga/introduction-to-typescript-functions-part-1-e1257c33a3f6

TypeScript Tidbits:
ncjamieson.com/typescript-tidbits/

A TypeScript Startup Guide for the Impatient
https://itnext.io/a-typescript-startup-guide-for-the-impatient-43dc4063d1cb

Railroad code in TypeScript:
https://itnext.io/railroad-programming-in-typescript-21d69f486f6e

TypeScript for People in a Hurry:
https://levelup.gitconnected.com/typescript-for-people-in-a-hurry-dfbf8956d767

10 Reasons to Use TypeScript Over Vanilla JavaScript: 
https://medium.com/better-programming/10-reasons-to-use-typescript-over-vanilla-javascript-a49256e527d3

TypeScript Practical Introduction:
auth0.com/blog/typescript-practical-introduction/

Full-Stack TypeScript Apps - Part 1: Developing Backend APIs with Nest.js:
auth0.com/blog/full-stack-typescript-apps-part-1-developing-backend-apis-with-nestjs/

Full-Stack TypeScript Apps - Part 2: Developing Frontend Angular Apps:
auth0.com/blog/full-stack-typescript-apps-part-2-developing-frontend-angular-apps/

A Handy Guide to Export and Import Modules for JavaScript and TypeScript - How to include exactly what you need to get the job done: 
https://medium.com/better-programming/a-handy-guide-to-export-and-import-modules-for-javascript-and-typescript-6cff8e47d554

Learn About Generics in TypeScript:
https://medium.com/better-programming/learn-about-generics-in-typescript-29a02de882c4

An Introduction to TypeScript Interfaces: 
https://medium.com/better-programming/introduction-to-typescript-interfaces-extending-interfaces-and-classes-af10fcfc1238

TypeScript library starter - A starter project that makes creating a TypeScript library extremely easy: 
https://www.npmjs.com/package/ngxs-entity

Java2TypeScript - A Java to TypeScript transpiler.  Good for creating TypeScript model classes/interfaces from Java model classes:
https://github.com/datathings/java2typescript

Generates TypeScript from Java - JSON declarations, REST service client:
https://github.com/vojtechhabarta/typescript-generator

Online tool to transform Java model class to Typescript class (not interface though):
http://www.jsweet.org/jsweet-live-sandbox/

Eclipse plugin is available:
http://www.jsweet.org/eclipse-plugin/

Plugin site:  http://eclipse-update-site.jsweet.org

https://dzone.com/articles/spring-rest-typescript-generator

Spring rest 2 ts is typescript generator which produces data model and services in typescript based on Spring MVC annotations. It supports generation for Angular and React
https://github.com/blue-veery-gmbh/spring-rest-2-ts

TypeDoc - A documentation generator for TypeScript projects:
http://typedoc.org


GlueGun - Helps create CLI apps in TypeScript:
https://shift.infinite.red/announcing-gluegun-2-0-a-delightful-way-to-build-command-line-apps-in-node-936f9ab9916d

GlueGun Documentation:
https://infinitered.github.io/gluegun/#/

GlueGun Getting Started Guide:
https://infinitered.github.io/gluegun/#/getting-started

Movie Search example app in TypeScript using GlueGun:
https://infinitered.github.io/gluegun/#/tutorial-making-a-movie-cli
https://github.com/infinitered/tutorial-movie

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================

TypeScript Data Types: 

Introduction to TypeScript Data Types (Part 1) - Null, void, undefined, never, and object types:
https://medium.com/better-programming/introduction-to-typescript-data-types-void-null-undefined-never-and-object-types-11eb839e5381

Introduction to TypeScript Data Types (Part 2) - Numbers, strings, and objects:
https://medium.com/better-programming/introduction-to-typescript-data-types-numbers-strings-and-objects-2b6eaebd5d66

Understanding Enumerations:
https://medium.com/angular-in-depth/understanding-enumerations-f02935d4a66c

4 Ways to Replace “Any” in TypeScript: 
https://medium.com/better-programming/4-ways-to-replace-any-in-typescript-5470b8d8357d

============================================================================================================================================
============================================================================================================================================
============================================================================================================================================


============================================================================================================================================
============================================================================================================================================
============================================================================================================================================


============================================================================================================================================
============================================================================================================================================
============================================================================================================================================


============================================================================================================================================
============================================================================================================================================
============================================================================================================================================


============================================================================================================================================
============================================================================================================================================
============================================================================================================================================


